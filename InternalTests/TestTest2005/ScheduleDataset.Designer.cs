//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.4927
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

#pragma warning disable 1591

namespace TestTest2005 {
    
    
    /// <summary>
    ///Represents a strongly typed in-memory cache of data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.Serializable()]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema")]
    [global::System.Xml.Serialization.XmlRootAttribute("ScheduleDataset")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")]
    public partial class ScheduleDataset : global::System.Data.DataSet {
        
        private ROOMDataTable tableROOM;
        
        private APPOINTMENTDataTable tableAPPOINTMENT;
        
        private APPOINTMENT_CATEGORYDataTable tableAPPOINTMENT_CATEGORY;
        
        private APPOINTMENT_PROVIDERDataTable tableAPPOINTMENT_PROVIDER;
        
        private CATEGORYDataTable tableCATEGORY;
        
        private PROVIDERDataTable tablePROVIDER;
        
        private RECURRENCEDataTable tableRECURRENCE;
        
        private RESOURCEDataTable tableRESOURCE;
        
        private APPOINTMENT_RESOURCEDataTable tableAPPOINTMENT_RESOURCE;
        
        private global::System.Data.DataRelation relationFK_ROOM_APPOINTMENT;
        
        private global::System.Data.DataRelation relationFK_APPOINTMENT_APPOINTMENT_CATEGORY;
        
        private global::System.Data.DataRelation relationFK_CATEGORY_APPOINTMENT_CATEGORY;
        
        private global::System.Data.DataRelation relationFK_APPOINTMENT_APPOINTMENT_PROVIDER;
        
        private global::System.Data.DataRelation relationFK_PROVIDER_APPOINTMENT_PROVIDER;
        
        private global::System.Data.DataRelation relationRESOURCEAPPOINTMENT_RESOURCE;
        
        private global::System.Data.DataRelation relationAPPOINTMENTAPPOINTMENT_RESOURCE;
        
        private global::System.Data.SchemaSerializationMode _schemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public ScheduleDataset() {
            this.BeginInit();
            this.InitClass();
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            base.Relations.CollectionChanged += schemaChangedHandler;
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected ScheduleDataset(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                base(info, context, false) {
            if ((this.IsBinarySerialized(info, context) == true)) {
                this.InitVars(false);
                global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler1 = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
                this.Tables.CollectionChanged += schemaChangedHandler1;
                this.Relations.CollectionChanged += schemaChangedHandler1;
                return;
            }
            string strSchema = ((string)(info.GetValue("XmlSchema", typeof(string))));
            if ((this.DetermineSchemaSerializationMode(info, context) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
                if ((ds.Tables["ROOM"] != null)) {
                    base.Tables.Add(new ROOMDataTable(ds.Tables["ROOM"]));
                }
                if ((ds.Tables["APPOINTMENT"] != null)) {
                    base.Tables.Add(new APPOINTMENTDataTable(ds.Tables["APPOINTMENT"]));
                }
                if ((ds.Tables["APPOINTMENT_CATEGORY"] != null)) {
                    base.Tables.Add(new APPOINTMENT_CATEGORYDataTable(ds.Tables["APPOINTMENT_CATEGORY"]));
                }
                if ((ds.Tables["APPOINTMENT_PROVIDER"] != null)) {
                    base.Tables.Add(new APPOINTMENT_PROVIDERDataTable(ds.Tables["APPOINTMENT_PROVIDER"]));
                }
                if ((ds.Tables["CATEGORY"] != null)) {
                    base.Tables.Add(new CATEGORYDataTable(ds.Tables["CATEGORY"]));
                }
                if ((ds.Tables["PROVIDER"] != null)) {
                    base.Tables.Add(new PROVIDERDataTable(ds.Tables["PROVIDER"]));
                }
                if ((ds.Tables["RECURRENCE"] != null)) {
                    base.Tables.Add(new RECURRENCEDataTable(ds.Tables["RECURRENCE"]));
                }
                if ((ds.Tables["RESOURCE"] != null)) {
                    base.Tables.Add(new RESOURCEDataTable(ds.Tables["RESOURCE"]));
                }
                if ((ds.Tables["APPOINTMENT_RESOURCE"] != null)) {
                    base.Tables.Add(new APPOINTMENT_RESOURCEDataTable(ds.Tables["APPOINTMENT_RESOURCE"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
            }
            this.GetSerializationData(info, context);
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public ROOMDataTable ROOM {
            get {
                return this.tableROOM;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public APPOINTMENTDataTable APPOINTMENT {
            get {
                return this.tableAPPOINTMENT;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public APPOINTMENT_CATEGORYDataTable APPOINTMENT_CATEGORY {
            get {
                return this.tableAPPOINTMENT_CATEGORY;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public APPOINTMENT_PROVIDERDataTable APPOINTMENT_PROVIDER {
            get {
                return this.tableAPPOINTMENT_PROVIDER;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public CATEGORYDataTable CATEGORY {
            get {
                return this.tableCATEGORY;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public PROVIDERDataTable PROVIDER {
            get {
                return this.tablePROVIDER;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public RECURRENCEDataTable RECURRENCE {
            get {
                return this.tableRECURRENCE;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public RESOURCEDataTable RESOURCE {
            get {
                return this.tableRESOURCE;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public APPOINTMENT_RESOURCEDataTable APPOINTMENT_RESOURCE {
            get {
                return this.tableAPPOINTMENT_RESOURCE;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.BrowsableAttribute(true)]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Visible)]
        public override global::System.Data.SchemaSerializationMode SchemaSerializationMode {
            get {
                return this._schemaSerializationMode;
            }
            set {
                this._schemaSerializationMode = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataTableCollection Tables {
            get {
                return base.Tables;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataRelationCollection Relations {
            get {
                return base.Relations;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void InitializeDerivedDataSet() {
            this.BeginInit();
            this.InitClass();
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public override global::System.Data.DataSet Clone() {
            ScheduleDataset cln = ((ScheduleDataset)(base.Clone()));
            cln.InitVars();
            cln.SchemaSerializationMode = this.SchemaSerializationMode;
            return cln;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeTables() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeRelations() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void ReadXmlSerializable(global::System.Xml.XmlReader reader) {
            if ((this.DetermineSchemaSerializationMode(reader) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                this.Reset();
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXml(reader);
                if ((ds.Tables["ROOM"] != null)) {
                    base.Tables.Add(new ROOMDataTable(ds.Tables["ROOM"]));
                }
                if ((ds.Tables["APPOINTMENT"] != null)) {
                    base.Tables.Add(new APPOINTMENTDataTable(ds.Tables["APPOINTMENT"]));
                }
                if ((ds.Tables["APPOINTMENT_CATEGORY"] != null)) {
                    base.Tables.Add(new APPOINTMENT_CATEGORYDataTable(ds.Tables["APPOINTMENT_CATEGORY"]));
                }
                if ((ds.Tables["APPOINTMENT_PROVIDER"] != null)) {
                    base.Tables.Add(new APPOINTMENT_PROVIDERDataTable(ds.Tables["APPOINTMENT_PROVIDER"]));
                }
                if ((ds.Tables["CATEGORY"] != null)) {
                    base.Tables.Add(new CATEGORYDataTable(ds.Tables["CATEGORY"]));
                }
                if ((ds.Tables["PROVIDER"] != null)) {
                    base.Tables.Add(new PROVIDERDataTable(ds.Tables["PROVIDER"]));
                }
                if ((ds.Tables["RECURRENCE"] != null)) {
                    base.Tables.Add(new RECURRENCEDataTable(ds.Tables["RECURRENCE"]));
                }
                if ((ds.Tables["RESOURCE"] != null)) {
                    base.Tables.Add(new RESOURCEDataTable(ds.Tables["RESOURCE"]));
                }
                if ((ds.Tables["APPOINTMENT_RESOURCE"] != null)) {
                    base.Tables.Add(new APPOINTMENT_RESOURCEDataTable(ds.Tables["APPOINTMENT_RESOURCE"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXml(reader);
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override global::System.Xml.Schema.XmlSchema GetSchemaSerializable() {
            global::System.IO.MemoryStream stream = new global::System.IO.MemoryStream();
            this.WriteXmlSchema(new global::System.Xml.XmlTextWriter(stream, null));
            stream.Position = 0;
            return global::System.Xml.Schema.XmlSchema.Read(new global::System.Xml.XmlTextReader(stream), null);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars() {
            this.InitVars(true);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars(bool initTable) {
            this.tableROOM = ((ROOMDataTable)(base.Tables["ROOM"]));
            if ((initTable == true)) {
                if ((this.tableROOM != null)) {
                    this.tableROOM.InitVars();
                }
            }
            this.tableAPPOINTMENT = ((APPOINTMENTDataTable)(base.Tables["APPOINTMENT"]));
            if ((initTable == true)) {
                if ((this.tableAPPOINTMENT != null)) {
                    this.tableAPPOINTMENT.InitVars();
                }
            }
            this.tableAPPOINTMENT_CATEGORY = ((APPOINTMENT_CATEGORYDataTable)(base.Tables["APPOINTMENT_CATEGORY"]));
            if ((initTable == true)) {
                if ((this.tableAPPOINTMENT_CATEGORY != null)) {
                    this.tableAPPOINTMENT_CATEGORY.InitVars();
                }
            }
            this.tableAPPOINTMENT_PROVIDER = ((APPOINTMENT_PROVIDERDataTable)(base.Tables["APPOINTMENT_PROVIDER"]));
            if ((initTable == true)) {
                if ((this.tableAPPOINTMENT_PROVIDER != null)) {
                    this.tableAPPOINTMENT_PROVIDER.InitVars();
                }
            }
            this.tableCATEGORY = ((CATEGORYDataTable)(base.Tables["CATEGORY"]));
            if ((initTable == true)) {
                if ((this.tableCATEGORY != null)) {
                    this.tableCATEGORY.InitVars();
                }
            }
            this.tablePROVIDER = ((PROVIDERDataTable)(base.Tables["PROVIDER"]));
            if ((initTable == true)) {
                if ((this.tablePROVIDER != null)) {
                    this.tablePROVIDER.InitVars();
                }
            }
            this.tableRECURRENCE = ((RECURRENCEDataTable)(base.Tables["RECURRENCE"]));
            if ((initTable == true)) {
                if ((this.tableRECURRENCE != null)) {
                    this.tableRECURRENCE.InitVars();
                }
            }
            this.tableRESOURCE = ((RESOURCEDataTable)(base.Tables["RESOURCE"]));
            if ((initTable == true)) {
                if ((this.tableRESOURCE != null)) {
                    this.tableRESOURCE.InitVars();
                }
            }
            this.tableAPPOINTMENT_RESOURCE = ((APPOINTMENT_RESOURCEDataTable)(base.Tables["APPOINTMENT_RESOURCE"]));
            if ((initTable == true)) {
                if ((this.tableAPPOINTMENT_RESOURCE != null)) {
                    this.tableAPPOINTMENT_RESOURCE.InitVars();
                }
            }
            this.relationFK_ROOM_APPOINTMENT = this.Relations["FK_ROOM_APPOINTMENT"];
            this.relationFK_APPOINTMENT_APPOINTMENT_CATEGORY = this.Relations["FK_APPOINTMENT_APPOINTMENT_CATEGORY"];
            this.relationFK_CATEGORY_APPOINTMENT_CATEGORY = this.Relations["FK_CATEGORY_APPOINTMENT_CATEGORY"];
            this.relationFK_APPOINTMENT_APPOINTMENT_PROVIDER = this.Relations["FK_APPOINTMENT_APPOINTMENT_PROVIDER"];
            this.relationFK_PROVIDER_APPOINTMENT_PROVIDER = this.Relations["FK_PROVIDER_APPOINTMENT_PROVIDER"];
            this.relationRESOURCEAPPOINTMENT_RESOURCE = this.Relations["RESOURCEAPPOINTMENT_RESOURCE"];
            this.relationAPPOINTMENTAPPOINTMENT_RESOURCE = this.Relations["APPOINTMENTAPPOINTMENT_RESOURCE"];
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitClass() {
            this.DataSetName = "ScheduleDataset";
            this.Prefix = "";
            this.Namespace = "http://tempuri.org/ScheduleDataset.xsd";
            this.EnforceConstraints = true;
            this.SchemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
            this.tableROOM = new ROOMDataTable();
            base.Tables.Add(this.tableROOM);
            this.tableAPPOINTMENT = new APPOINTMENTDataTable();
            base.Tables.Add(this.tableAPPOINTMENT);
            this.tableAPPOINTMENT_CATEGORY = new APPOINTMENT_CATEGORYDataTable();
            base.Tables.Add(this.tableAPPOINTMENT_CATEGORY);
            this.tableAPPOINTMENT_PROVIDER = new APPOINTMENT_PROVIDERDataTable();
            base.Tables.Add(this.tableAPPOINTMENT_PROVIDER);
            this.tableCATEGORY = new CATEGORYDataTable();
            base.Tables.Add(this.tableCATEGORY);
            this.tablePROVIDER = new PROVIDERDataTable();
            base.Tables.Add(this.tablePROVIDER);
            this.tableRECURRENCE = new RECURRENCEDataTable();
            base.Tables.Add(this.tableRECURRENCE);
            this.tableRESOURCE = new RESOURCEDataTable();
            base.Tables.Add(this.tableRESOURCE);
            this.tableAPPOINTMENT_RESOURCE = new APPOINTMENT_RESOURCEDataTable();
            base.Tables.Add(this.tableAPPOINTMENT_RESOURCE);
            global::System.Data.ForeignKeyConstraint fkc;
            fkc = new global::System.Data.ForeignKeyConstraint("FK_ROOM_APPOINTMENT", new global::System.Data.DataColumn[] {
                        this.tableROOM.room_guidColumn}, new global::System.Data.DataColumn[] {
                        this.tableAPPOINTMENT.room_guidColumn});
            this.tableAPPOINTMENT.Constraints.Add(fkc);
            fkc.AcceptRejectRule = global::System.Data.AcceptRejectRule.None;
            fkc.DeleteRule = global::System.Data.Rule.Cascade;
            fkc.UpdateRule = global::System.Data.Rule.Cascade;
            fkc = new global::System.Data.ForeignKeyConstraint("FK_APPOINTMENT_APPOINTMENT_CATEGORY", new global::System.Data.DataColumn[] {
                        this.tableAPPOINTMENT.appointment_guidColumn}, new global::System.Data.DataColumn[] {
                        this.tableAPPOINTMENT_CATEGORY.appointment_guidColumn});
            this.tableAPPOINTMENT_CATEGORY.Constraints.Add(fkc);
            fkc.AcceptRejectRule = global::System.Data.AcceptRejectRule.None;
            fkc.DeleteRule = global::System.Data.Rule.Cascade;
            fkc.UpdateRule = global::System.Data.Rule.Cascade;
            fkc = new global::System.Data.ForeignKeyConstraint("FK_CATEGORY_APPOINTMENT_CATEGORY", new global::System.Data.DataColumn[] {
                        this.tableCATEGORY.category_guidColumn}, new global::System.Data.DataColumn[] {
                        this.tableAPPOINTMENT_CATEGORY.category_guidColumn});
            this.tableAPPOINTMENT_CATEGORY.Constraints.Add(fkc);
            fkc.AcceptRejectRule = global::System.Data.AcceptRejectRule.None;
            fkc.DeleteRule = global::System.Data.Rule.Cascade;
            fkc.UpdateRule = global::System.Data.Rule.Cascade;
            fkc = new global::System.Data.ForeignKeyConstraint("FK_APPOINTMENT_APPOINTMENT_PROVIDER", new global::System.Data.DataColumn[] {
                        this.tableAPPOINTMENT.appointment_guidColumn}, new global::System.Data.DataColumn[] {
                        this.tableAPPOINTMENT_PROVIDER.appointment_guidColumn});
            this.tableAPPOINTMENT_PROVIDER.Constraints.Add(fkc);
            fkc.AcceptRejectRule = global::System.Data.AcceptRejectRule.None;
            fkc.DeleteRule = global::System.Data.Rule.Cascade;
            fkc.UpdateRule = global::System.Data.Rule.Cascade;
            fkc = new global::System.Data.ForeignKeyConstraint("FK_PROVIDER_APPOINTMENT_PROVIDER", new global::System.Data.DataColumn[] {
                        this.tablePROVIDER.provider_guidColumn}, new global::System.Data.DataColumn[] {
                        this.tableAPPOINTMENT_PROVIDER.provider_guidColumn});
            this.tableAPPOINTMENT_PROVIDER.Constraints.Add(fkc);
            fkc.AcceptRejectRule = global::System.Data.AcceptRejectRule.None;
            fkc.DeleteRule = global::System.Data.Rule.Cascade;
            fkc.UpdateRule = global::System.Data.Rule.Cascade;
            fkc = new global::System.Data.ForeignKeyConstraint("RESOURCEAPPOINTMENT_RESOURCE", new global::System.Data.DataColumn[] {
                        this.tableRESOURCE.resource_guidColumn}, new global::System.Data.DataColumn[] {
                        this.tableAPPOINTMENT_RESOURCE.resource_guidColumn});
            this.tableAPPOINTMENT_RESOURCE.Constraints.Add(fkc);
            fkc.AcceptRejectRule = global::System.Data.AcceptRejectRule.None;
            fkc.DeleteRule = global::System.Data.Rule.Cascade;
            fkc.UpdateRule = global::System.Data.Rule.Cascade;
            fkc = new global::System.Data.ForeignKeyConstraint("APPOINTMENTAPPOINTMENT_RESOURCE", new global::System.Data.DataColumn[] {
                        this.tableAPPOINTMENT.appointment_guidColumn}, new global::System.Data.DataColumn[] {
                        this.tableAPPOINTMENT_RESOURCE.appointment_guidColumn});
            this.tableAPPOINTMENT_RESOURCE.Constraints.Add(fkc);
            fkc.AcceptRejectRule = global::System.Data.AcceptRejectRule.None;
            fkc.DeleteRule = global::System.Data.Rule.Cascade;
            fkc.UpdateRule = global::System.Data.Rule.Cascade;
            this.relationFK_ROOM_APPOINTMENT = new global::System.Data.DataRelation("FK_ROOM_APPOINTMENT", new global::System.Data.DataColumn[] {
                        this.tableROOM.room_guidColumn}, new global::System.Data.DataColumn[] {
                        this.tableAPPOINTMENT.room_guidColumn}, false);
            this.Relations.Add(this.relationFK_ROOM_APPOINTMENT);
            this.relationFK_APPOINTMENT_APPOINTMENT_CATEGORY = new global::System.Data.DataRelation("FK_APPOINTMENT_APPOINTMENT_CATEGORY", new global::System.Data.DataColumn[] {
                        this.tableAPPOINTMENT.appointment_guidColumn}, new global::System.Data.DataColumn[] {
                        this.tableAPPOINTMENT_CATEGORY.appointment_guidColumn}, false);
            this.Relations.Add(this.relationFK_APPOINTMENT_APPOINTMENT_CATEGORY);
            this.relationFK_CATEGORY_APPOINTMENT_CATEGORY = new global::System.Data.DataRelation("FK_CATEGORY_APPOINTMENT_CATEGORY", new global::System.Data.DataColumn[] {
                        this.tableCATEGORY.category_guidColumn}, new global::System.Data.DataColumn[] {
                        this.tableAPPOINTMENT_CATEGORY.category_guidColumn}, false);
            this.Relations.Add(this.relationFK_CATEGORY_APPOINTMENT_CATEGORY);
            this.relationFK_APPOINTMENT_APPOINTMENT_PROVIDER = new global::System.Data.DataRelation("FK_APPOINTMENT_APPOINTMENT_PROVIDER", new global::System.Data.DataColumn[] {
                        this.tableAPPOINTMENT.appointment_guidColumn}, new global::System.Data.DataColumn[] {
                        this.tableAPPOINTMENT_PROVIDER.appointment_guidColumn}, false);
            this.Relations.Add(this.relationFK_APPOINTMENT_APPOINTMENT_PROVIDER);
            this.relationFK_PROVIDER_APPOINTMENT_PROVIDER = new global::System.Data.DataRelation("FK_PROVIDER_APPOINTMENT_PROVIDER", new global::System.Data.DataColumn[] {
                        this.tablePROVIDER.provider_guidColumn}, new global::System.Data.DataColumn[] {
                        this.tableAPPOINTMENT_PROVIDER.provider_guidColumn}, false);
            this.Relations.Add(this.relationFK_PROVIDER_APPOINTMENT_PROVIDER);
            this.relationRESOURCEAPPOINTMENT_RESOURCE = new global::System.Data.DataRelation("RESOURCEAPPOINTMENT_RESOURCE", new global::System.Data.DataColumn[] {
                        this.tableRESOURCE.resource_guidColumn}, new global::System.Data.DataColumn[] {
                        this.tableAPPOINTMENT_RESOURCE.resource_guidColumn}, false);
            this.Relations.Add(this.relationRESOURCEAPPOINTMENT_RESOURCE);
            this.relationAPPOINTMENTAPPOINTMENT_RESOURCE = new global::System.Data.DataRelation("APPOINTMENTAPPOINTMENT_RESOURCE", new global::System.Data.DataColumn[] {
                        this.tableAPPOINTMENT.appointment_guidColumn}, new global::System.Data.DataColumn[] {
                        this.tableAPPOINTMENT_RESOURCE.appointment_guidColumn}, false);
            this.Relations.Add(this.relationAPPOINTMENTAPPOINTMENT_RESOURCE);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeROOM() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeAPPOINTMENT() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeAPPOINTMENT_CATEGORY() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeAPPOINTMENT_PROVIDER() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeCATEGORY() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializePROVIDER() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeRECURRENCE() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeRESOURCE() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeAPPOINTMENT_RESOURCE() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void SchemaChanged(object sender, global::System.ComponentModel.CollectionChangeEventArgs e) {
            if ((e.Action == global::System.ComponentModel.CollectionChangeAction.Remove)) {
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedDataSetSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
            ScheduleDataset ds = new ScheduleDataset();
            global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
            global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
            global::System.Xml.Schema.XmlSchemaAny any = new global::System.Xml.Schema.XmlSchemaAny();
            any.Namespace = ds.Namespace;
            sequence.Items.Add(any);
            type.Particle = sequence;
            global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
            if (xs.Contains(dsSchema.TargetNamespace)) {
                global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                try {
                    global::System.Xml.Schema.XmlSchema schema = null;
                    dsSchema.Write(s1);
                    for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                        schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                        s2.SetLength(0);
                        schema.Write(s2);
                        if ((s1.Length == s2.Length)) {
                            s1.Position = 0;
                            s2.Position = 0;
                            for (; ((s1.Position != s1.Length) 
                                        && (s1.ReadByte() == s2.ReadByte())); ) {
                                ;
                            }
                            if ((s1.Position == s1.Length)) {
                                return type;
                            }
                        }
                    }
                }
                finally {
                    if ((s1 != null)) {
                        s1.Close();
                    }
                    if ((s2 != null)) {
                        s2.Close();
                    }
                }
            }
            xs.Add(dsSchema);
            return type;
        }
        
        public delegate void ROOMRowChangeEventHandler(object sender, ROOMRowChangeEvent e);
        
        public delegate void APPOINTMENTRowChangeEventHandler(object sender, APPOINTMENTRowChangeEvent e);
        
        public delegate void APPOINTMENT_CATEGORYRowChangeEventHandler(object sender, APPOINTMENT_CATEGORYRowChangeEvent e);
        
        public delegate void APPOINTMENT_PROVIDERRowChangeEventHandler(object sender, APPOINTMENT_PROVIDERRowChangeEvent e);
        
        public delegate void CATEGORYRowChangeEventHandler(object sender, CATEGORYRowChangeEvent e);
        
        public delegate void PROVIDERRowChangeEventHandler(object sender, PROVIDERRowChangeEvent e);
        
        public delegate void RECURRENCERowChangeEventHandler(object sender, RECURRENCERowChangeEvent e);
        
        public delegate void RESOURCERowChangeEventHandler(object sender, RESOURCERowChangeEvent e);
        
        public delegate void APPOINTMENT_RESOURCERowChangeEventHandler(object sender, APPOINTMENT_RESOURCERowChangeEvent e);
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class ROOMDataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columnroom_guid;
            
            private global::System.Data.DataColumn columnname;
            
            private global::System.Data.DataColumn columnnotes;
            
            private global::System.Data.DataColumn columnvisible;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ROOMDataTable() {
                this.TableName = "ROOM";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal ROOMDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected ROOMDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn room_guidColumn {
                get {
                    return this.columnroom_guid;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn nameColumn {
                get {
                    return this.columnname;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn notesColumn {
                get {
                    return this.columnnotes;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn visibleColumn {
                get {
                    return this.columnvisible;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ROOMRow this[int index] {
                get {
                    return ((ROOMRow)(this.Rows[index]));
                }
            }
            
            public event ROOMRowChangeEventHandler ROOMRowChanging;
            
            public event ROOMRowChangeEventHandler ROOMRowChanged;
            
            public event ROOMRowChangeEventHandler ROOMRowDeleting;
            
            public event ROOMRowChangeEventHandler ROOMRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddROOMRow(ROOMRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ROOMRow AddROOMRow(string room_guid, string name, string notes, bool visible) {
                ROOMRow rowROOMRow = ((ROOMRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        room_guid,
                        name,
                        notes,
                        visible};
                rowROOMRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowROOMRow);
                return rowROOMRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ROOMRow FindByroom_guid(string room_guid) {
                return ((ROOMRow)(this.Rows.Find(new object[] {
                            room_guid})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                ROOMDataTable cln = ((ROOMDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new ROOMDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnroom_guid = base.Columns["room_guid"];
                this.columnname = base.Columns["name"];
                this.columnnotes = base.Columns["notes"];
                this.columnvisible = base.Columns["visible"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnroom_guid = new global::System.Data.DataColumn("room_guid", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnroom_guid);
                this.columnname = new global::System.Data.DataColumn("name", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnname);
                this.columnnotes = new global::System.Data.DataColumn("notes", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnnotes);
                this.columnvisible = new global::System.Data.DataColumn("visible", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnvisible);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("PK_ROOM", new global::System.Data.DataColumn[] {
                                this.columnroom_guid}, true));
                this.columnroom_guid.AllowDBNull = false;
                this.columnroom_guid.Unique = true;
                this.columnname.AllowDBNull = false;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ROOMRow NewROOMRow() {
                return ((ROOMRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new ROOMRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(ROOMRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.ROOMRowChanged != null)) {
                    this.ROOMRowChanged(this, new ROOMRowChangeEvent(((ROOMRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.ROOMRowChanging != null)) {
                    this.ROOMRowChanging(this, new ROOMRowChangeEvent(((ROOMRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.ROOMRowDeleted != null)) {
                    this.ROOMRowDeleted(this, new ROOMRowChangeEvent(((ROOMRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.ROOMRowDeleting != null)) {
                    this.ROOMRowDeleting(this, new ROOMRowChangeEvent(((ROOMRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveROOMRow(ROOMRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                ScheduleDataset ds = new ScheduleDataset();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "ROOMDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class APPOINTMENTDataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columnappointment_guid;
            
            private global::System.Data.DataColumn columnstart_date;
            
            private global::System.Data.DataColumn columnlength;
            
            private global::System.Data.DataColumn columnsubject;
            
            private global::System.Data.DataColumn columntext;
            
            private global::System.Data.DataColumn columnnotes;
            
            private global::System.Data.DataColumn columntooltiptext;
            
            private global::System.Data.DataColumn columnvisible;
            
            private global::System.Data.DataColumn columnblockout;
            
            private global::System.Data.DataColumn columnisevent;
            
            private global::System.Data.DataColumn columnisactivity;
            
            private global::System.Data.DataColumn columnisflagged;
            
            private global::System.Data.DataColumn columnisreadonly;
            
            private global::System.Data.DataColumn columnmaxlength;
            
            private global::System.Data.DataColumn columnminlength;
            
            private global::System.Data.DataColumn columnrecurrence_guid;
            
            private global::System.Data.DataColumn columnrecurrence_stamp;
            
            private global::System.Data.DataColumn columnpriority_guid;
            
            private global::System.Data.DataColumn columnappearance_guid;
            
            private global::System.Data.DataColumn columnroom_guid;
            
            private global::System.Data.DataColumn columnalarm_window_text;
            
            private global::System.Data.DataColumn columnalarm_is_armed;
            
            private global::System.Data.DataColumn columnalarm_reminder;
            
            private global::System.Data.DataColumn columnalarm_allow_open;
            
            private global::System.Data.DataColumn columnalarm_allow_snooze;
            
            private global::System.Data.DataColumn columnalarm_application_name;
            
            private global::System.Data.DataColumn columnalarm_application_args;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public APPOINTMENTDataTable() {
                this.TableName = "APPOINTMENT";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal APPOINTMENTDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected APPOINTMENTDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn appointment_guidColumn {
                get {
                    return this.columnappointment_guid;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn start_dateColumn {
                get {
                    return this.columnstart_date;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn lengthColumn {
                get {
                    return this.columnlength;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn subjectColumn {
                get {
                    return this.columnsubject;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn textColumn {
                get {
                    return this.columntext;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn notesColumn {
                get {
                    return this.columnnotes;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn tooltiptextColumn {
                get {
                    return this.columntooltiptext;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn visibleColumn {
                get {
                    return this.columnvisible;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn blockoutColumn {
                get {
                    return this.columnblockout;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn iseventColumn {
                get {
                    return this.columnisevent;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn isactivityColumn {
                get {
                    return this.columnisactivity;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn isflaggedColumn {
                get {
                    return this.columnisflagged;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn isreadonlyColumn {
                get {
                    return this.columnisreadonly;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn maxlengthColumn {
                get {
                    return this.columnmaxlength;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn minlengthColumn {
                get {
                    return this.columnminlength;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn recurrence_guidColumn {
                get {
                    return this.columnrecurrence_guid;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn recurrence_stampColumn {
                get {
                    return this.columnrecurrence_stamp;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn priority_guidColumn {
                get {
                    return this.columnpriority_guid;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn appearance_guidColumn {
                get {
                    return this.columnappearance_guid;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn room_guidColumn {
                get {
                    return this.columnroom_guid;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn alarm_window_textColumn {
                get {
                    return this.columnalarm_window_text;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn alarm_is_armedColumn {
                get {
                    return this.columnalarm_is_armed;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn alarm_reminderColumn {
                get {
                    return this.columnalarm_reminder;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn alarm_allow_openColumn {
                get {
                    return this.columnalarm_allow_open;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn alarm_allow_snoozeColumn {
                get {
                    return this.columnalarm_allow_snooze;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn alarm_application_nameColumn {
                get {
                    return this.columnalarm_application_name;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn alarm_application_argsColumn {
                get {
                    return this.columnalarm_application_args;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public APPOINTMENTRow this[int index] {
                get {
                    return ((APPOINTMENTRow)(this.Rows[index]));
                }
            }
            
            public event APPOINTMENTRowChangeEventHandler APPOINTMENTRowChanging;
            
            public event APPOINTMENTRowChangeEventHandler APPOINTMENTRowChanged;
            
            public event APPOINTMENTRowChangeEventHandler APPOINTMENTRowDeleting;
            
            public event APPOINTMENTRowChangeEventHandler APPOINTMENTRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddAPPOINTMENTRow(APPOINTMENTRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public APPOINTMENTRow AddAPPOINTMENTRow(
                        string appointment_guid, 
                        System.DateTime start_date, 
                        int length, 
                        string subject, 
                        string text, 
                        string notes, 
                        string tooltiptext, 
                        bool visible, 
                        bool blockout, 
                        bool isevent, 
                        bool isactivity, 
                        bool isflagged, 
                        bool isreadonly, 
                        int maxlength, 
                        int minlength, 
                        string recurrence_guid, 
                        string recurrence_stamp, 
                        string priority_guid, 
                        string appearance_guid, 
                        ROOMRow parentROOMRowByFK_ROOM_APPOINTMENT, 
                        string alarm_window_text, 
                        bool alarm_is_armed, 
                        int alarm_reminder, 
                        bool alarm_allow_open, 
                        bool alarm_allow_snooze, 
                        string alarm_application_name, 
                        string alarm_application_args) {
                APPOINTMENTRow rowAPPOINTMENTRow = ((APPOINTMENTRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        appointment_guid,
                        start_date,
                        length,
                        subject,
                        text,
                        notes,
                        tooltiptext,
                        visible,
                        blockout,
                        isevent,
                        isactivity,
                        isflagged,
                        isreadonly,
                        maxlength,
                        minlength,
                        recurrence_guid,
                        recurrence_stamp,
                        priority_guid,
                        appearance_guid,
                        null,
                        alarm_window_text,
                        alarm_is_armed,
                        alarm_reminder,
                        alarm_allow_open,
                        alarm_allow_snooze,
                        alarm_application_name,
                        alarm_application_args};
                if ((parentROOMRowByFK_ROOM_APPOINTMENT != null)) {
                    columnValuesArray[19] = parentROOMRowByFK_ROOM_APPOINTMENT[0];
                }
                rowAPPOINTMENTRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowAPPOINTMENTRow);
                return rowAPPOINTMENTRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public APPOINTMENTRow FindByappointment_guid(string appointment_guid) {
                return ((APPOINTMENTRow)(this.Rows.Find(new object[] {
                            appointment_guid})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                APPOINTMENTDataTable cln = ((APPOINTMENTDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new APPOINTMENTDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnappointment_guid = base.Columns["appointment_guid"];
                this.columnstart_date = base.Columns["start_date"];
                this.columnlength = base.Columns["length"];
                this.columnsubject = base.Columns["subject"];
                this.columntext = base.Columns["text"];
                this.columnnotes = base.Columns["notes"];
                this.columntooltiptext = base.Columns["tooltiptext"];
                this.columnvisible = base.Columns["visible"];
                this.columnblockout = base.Columns["blockout"];
                this.columnisevent = base.Columns["isevent"];
                this.columnisactivity = base.Columns["isactivity"];
                this.columnisflagged = base.Columns["isflagged"];
                this.columnisreadonly = base.Columns["isreadonly"];
                this.columnmaxlength = base.Columns["maxlength"];
                this.columnminlength = base.Columns["minlength"];
                this.columnrecurrence_guid = base.Columns["recurrence_guid"];
                this.columnrecurrence_stamp = base.Columns["recurrence_stamp"];
                this.columnpriority_guid = base.Columns["priority_guid"];
                this.columnappearance_guid = base.Columns["appearance_guid"];
                this.columnroom_guid = base.Columns["room_guid"];
                this.columnalarm_window_text = base.Columns["alarm_window_text"];
                this.columnalarm_is_armed = base.Columns["alarm_is_armed"];
                this.columnalarm_reminder = base.Columns["alarm_reminder"];
                this.columnalarm_allow_open = base.Columns["alarm_allow_open"];
                this.columnalarm_allow_snooze = base.Columns["alarm_allow_snooze"];
                this.columnalarm_application_name = base.Columns["alarm_application_name"];
                this.columnalarm_application_args = base.Columns["alarm_application_args"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnappointment_guid = new global::System.Data.DataColumn("appointment_guid", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnappointment_guid);
                this.columnstart_date = new global::System.Data.DataColumn("start_date", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnstart_date);
                this.columnlength = new global::System.Data.DataColumn("length", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnlength);
                this.columnsubject = new global::System.Data.DataColumn("subject", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnsubject);
                this.columntext = new global::System.Data.DataColumn("text", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columntext);
                this.columnnotes = new global::System.Data.DataColumn("notes", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnnotes);
                this.columntooltiptext = new global::System.Data.DataColumn("tooltiptext", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columntooltiptext);
                this.columnvisible = new global::System.Data.DataColumn("visible", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnvisible);
                this.columnblockout = new global::System.Data.DataColumn("blockout", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnblockout);
                this.columnisevent = new global::System.Data.DataColumn("isevent", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnisevent);
                this.columnisactivity = new global::System.Data.DataColumn("isactivity", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnisactivity);
                this.columnisflagged = new global::System.Data.DataColumn("isflagged", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnisflagged);
                this.columnisreadonly = new global::System.Data.DataColumn("isreadonly", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnisreadonly);
                this.columnmaxlength = new global::System.Data.DataColumn("maxlength", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnmaxlength);
                this.columnminlength = new global::System.Data.DataColumn("minlength", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnminlength);
                this.columnrecurrence_guid = new global::System.Data.DataColumn("recurrence_guid", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnrecurrence_guid);
                this.columnrecurrence_stamp = new global::System.Data.DataColumn("recurrence_stamp", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnrecurrence_stamp);
                this.columnpriority_guid = new global::System.Data.DataColumn("priority_guid", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnpriority_guid);
                this.columnappearance_guid = new global::System.Data.DataColumn("appearance_guid", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnappearance_guid);
                this.columnroom_guid = new global::System.Data.DataColumn("room_guid", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnroom_guid);
                this.columnalarm_window_text = new global::System.Data.DataColumn("alarm_window_text", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnalarm_window_text);
                this.columnalarm_is_armed = new global::System.Data.DataColumn("alarm_is_armed", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnalarm_is_armed);
                this.columnalarm_reminder = new global::System.Data.DataColumn("alarm_reminder", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnalarm_reminder);
                this.columnalarm_allow_open = new global::System.Data.DataColumn("alarm_allow_open", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnalarm_allow_open);
                this.columnalarm_allow_snooze = new global::System.Data.DataColumn("alarm_allow_snooze", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnalarm_allow_snooze);
                this.columnalarm_application_name = new global::System.Data.DataColumn("alarm_application_name", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnalarm_application_name);
                this.columnalarm_application_args = new global::System.Data.DataColumn("alarm_application_args", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnalarm_application_args);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("PK_APPOINTMENT", new global::System.Data.DataColumn[] {
                                this.columnappointment_guid}, true));
                this.columnappointment_guid.AllowDBNull = false;
                this.columnappointment_guid.Unique = true;
                this.columnstart_date.AllowDBNull = false;
                this.columnlength.AllowDBNull = false;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public APPOINTMENTRow NewAPPOINTMENTRow() {
                return ((APPOINTMENTRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new APPOINTMENTRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(APPOINTMENTRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.APPOINTMENTRowChanged != null)) {
                    this.APPOINTMENTRowChanged(this, new APPOINTMENTRowChangeEvent(((APPOINTMENTRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.APPOINTMENTRowChanging != null)) {
                    this.APPOINTMENTRowChanging(this, new APPOINTMENTRowChangeEvent(((APPOINTMENTRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.APPOINTMENTRowDeleted != null)) {
                    this.APPOINTMENTRowDeleted(this, new APPOINTMENTRowChangeEvent(((APPOINTMENTRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.APPOINTMENTRowDeleting != null)) {
                    this.APPOINTMENTRowDeleting(this, new APPOINTMENTRowChangeEvent(((APPOINTMENTRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveAPPOINTMENTRow(APPOINTMENTRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                ScheduleDataset ds = new ScheduleDataset();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "APPOINTMENTDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class APPOINTMENT_CATEGORYDataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columnappointment_guid;
            
            private global::System.Data.DataColumn columncategory_guid;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public APPOINTMENT_CATEGORYDataTable() {
                this.TableName = "APPOINTMENT_CATEGORY";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal APPOINTMENT_CATEGORYDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected APPOINTMENT_CATEGORYDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn appointment_guidColumn {
                get {
                    return this.columnappointment_guid;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn category_guidColumn {
                get {
                    return this.columncategory_guid;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public APPOINTMENT_CATEGORYRow this[int index] {
                get {
                    return ((APPOINTMENT_CATEGORYRow)(this.Rows[index]));
                }
            }
            
            public event APPOINTMENT_CATEGORYRowChangeEventHandler APPOINTMENT_CATEGORYRowChanging;
            
            public event APPOINTMENT_CATEGORYRowChangeEventHandler APPOINTMENT_CATEGORYRowChanged;
            
            public event APPOINTMENT_CATEGORYRowChangeEventHandler APPOINTMENT_CATEGORYRowDeleting;
            
            public event APPOINTMENT_CATEGORYRowChangeEventHandler APPOINTMENT_CATEGORYRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddAPPOINTMENT_CATEGORYRow(APPOINTMENT_CATEGORYRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public APPOINTMENT_CATEGORYRow AddAPPOINTMENT_CATEGORYRow(APPOINTMENTRow parentAPPOINTMENTRowByFK_APPOINTMENT_APPOINTMENT_CATEGORY, CATEGORYRow parentCATEGORYRowByFK_CATEGORY_APPOINTMENT_CATEGORY) {
                APPOINTMENT_CATEGORYRow rowAPPOINTMENT_CATEGORYRow = ((APPOINTMENT_CATEGORYRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        null};
                if ((parentAPPOINTMENTRowByFK_APPOINTMENT_APPOINTMENT_CATEGORY != null)) {
                    columnValuesArray[0] = parentAPPOINTMENTRowByFK_APPOINTMENT_APPOINTMENT_CATEGORY[0];
                }
                if ((parentCATEGORYRowByFK_CATEGORY_APPOINTMENT_CATEGORY != null)) {
                    columnValuesArray[1] = parentCATEGORYRowByFK_CATEGORY_APPOINTMENT_CATEGORY[1];
                }
                rowAPPOINTMENT_CATEGORYRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowAPPOINTMENT_CATEGORYRow);
                return rowAPPOINTMENT_CATEGORYRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public APPOINTMENT_CATEGORYRow FindByappointment_guidcategory_guid(string appointment_guid, string category_guid) {
                return ((APPOINTMENT_CATEGORYRow)(this.Rows.Find(new object[] {
                            appointment_guid,
                            category_guid})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                APPOINTMENT_CATEGORYDataTable cln = ((APPOINTMENT_CATEGORYDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new APPOINTMENT_CATEGORYDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnappointment_guid = base.Columns["appointment_guid"];
                this.columncategory_guid = base.Columns["category_guid"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnappointment_guid = new global::System.Data.DataColumn("appointment_guid", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnappointment_guid);
                this.columncategory_guid = new global::System.Data.DataColumn("category_guid", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncategory_guid);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("PK_APPOINTMENT_CATEGORY", new global::System.Data.DataColumn[] {
                                this.columnappointment_guid,
                                this.columncategory_guid}, true));
                this.columnappointment_guid.AllowDBNull = false;
                this.columncategory_guid.AllowDBNull = false;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public APPOINTMENT_CATEGORYRow NewAPPOINTMENT_CATEGORYRow() {
                return ((APPOINTMENT_CATEGORYRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new APPOINTMENT_CATEGORYRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(APPOINTMENT_CATEGORYRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.APPOINTMENT_CATEGORYRowChanged != null)) {
                    this.APPOINTMENT_CATEGORYRowChanged(this, new APPOINTMENT_CATEGORYRowChangeEvent(((APPOINTMENT_CATEGORYRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.APPOINTMENT_CATEGORYRowChanging != null)) {
                    this.APPOINTMENT_CATEGORYRowChanging(this, new APPOINTMENT_CATEGORYRowChangeEvent(((APPOINTMENT_CATEGORYRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.APPOINTMENT_CATEGORYRowDeleted != null)) {
                    this.APPOINTMENT_CATEGORYRowDeleted(this, new APPOINTMENT_CATEGORYRowChangeEvent(((APPOINTMENT_CATEGORYRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.APPOINTMENT_CATEGORYRowDeleting != null)) {
                    this.APPOINTMENT_CATEGORYRowDeleting(this, new APPOINTMENT_CATEGORYRowChangeEvent(((APPOINTMENT_CATEGORYRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveAPPOINTMENT_CATEGORYRow(APPOINTMENT_CATEGORYRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                ScheduleDataset ds = new ScheduleDataset();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "APPOINTMENT_CATEGORYDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class APPOINTMENT_PROVIDERDataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columnappointment_guid;
            
            private global::System.Data.DataColumn columnprovider_guid;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public APPOINTMENT_PROVIDERDataTable() {
                this.TableName = "APPOINTMENT_PROVIDER";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal APPOINTMENT_PROVIDERDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected APPOINTMENT_PROVIDERDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn appointment_guidColumn {
                get {
                    return this.columnappointment_guid;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn provider_guidColumn {
                get {
                    return this.columnprovider_guid;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public APPOINTMENT_PROVIDERRow this[int index] {
                get {
                    return ((APPOINTMENT_PROVIDERRow)(this.Rows[index]));
                }
            }
            
            public event APPOINTMENT_PROVIDERRowChangeEventHandler APPOINTMENT_PROVIDERRowChanging;
            
            public event APPOINTMENT_PROVIDERRowChangeEventHandler APPOINTMENT_PROVIDERRowChanged;
            
            public event APPOINTMENT_PROVIDERRowChangeEventHandler APPOINTMENT_PROVIDERRowDeleting;
            
            public event APPOINTMENT_PROVIDERRowChangeEventHandler APPOINTMENT_PROVIDERRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddAPPOINTMENT_PROVIDERRow(APPOINTMENT_PROVIDERRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public APPOINTMENT_PROVIDERRow AddAPPOINTMENT_PROVIDERRow(APPOINTMENTRow parentAPPOINTMENTRowByFK_APPOINTMENT_APPOINTMENT_PROVIDER, PROVIDERRow parentPROVIDERRowByFK_PROVIDER_APPOINTMENT_PROVIDER) {
                APPOINTMENT_PROVIDERRow rowAPPOINTMENT_PROVIDERRow = ((APPOINTMENT_PROVIDERRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        null};
                if ((parentAPPOINTMENTRowByFK_APPOINTMENT_APPOINTMENT_PROVIDER != null)) {
                    columnValuesArray[0] = parentAPPOINTMENTRowByFK_APPOINTMENT_APPOINTMENT_PROVIDER[0];
                }
                if ((parentPROVIDERRowByFK_PROVIDER_APPOINTMENT_PROVIDER != null)) {
                    columnValuesArray[1] = parentPROVIDERRowByFK_PROVIDER_APPOINTMENT_PROVIDER[1];
                }
                rowAPPOINTMENT_PROVIDERRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowAPPOINTMENT_PROVIDERRow);
                return rowAPPOINTMENT_PROVIDERRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public APPOINTMENT_PROVIDERRow FindByappointment_guidprovider_guid(string appointment_guid, string provider_guid) {
                return ((APPOINTMENT_PROVIDERRow)(this.Rows.Find(new object[] {
                            appointment_guid,
                            provider_guid})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                APPOINTMENT_PROVIDERDataTable cln = ((APPOINTMENT_PROVIDERDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new APPOINTMENT_PROVIDERDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnappointment_guid = base.Columns["appointment_guid"];
                this.columnprovider_guid = base.Columns["provider_guid"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnappointment_guid = new global::System.Data.DataColumn("appointment_guid", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnappointment_guid);
                this.columnprovider_guid = new global::System.Data.DataColumn("provider_guid", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnprovider_guid);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("PK_APPOINTMENT_PROVIDER", new global::System.Data.DataColumn[] {
                                this.columnappointment_guid,
                                this.columnprovider_guid}, true));
                this.columnappointment_guid.AllowDBNull = false;
                this.columnprovider_guid.AllowDBNull = false;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public APPOINTMENT_PROVIDERRow NewAPPOINTMENT_PROVIDERRow() {
                return ((APPOINTMENT_PROVIDERRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new APPOINTMENT_PROVIDERRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(APPOINTMENT_PROVIDERRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.APPOINTMENT_PROVIDERRowChanged != null)) {
                    this.APPOINTMENT_PROVIDERRowChanged(this, new APPOINTMENT_PROVIDERRowChangeEvent(((APPOINTMENT_PROVIDERRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.APPOINTMENT_PROVIDERRowChanging != null)) {
                    this.APPOINTMENT_PROVIDERRowChanging(this, new APPOINTMENT_PROVIDERRowChangeEvent(((APPOINTMENT_PROVIDERRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.APPOINTMENT_PROVIDERRowDeleted != null)) {
                    this.APPOINTMENT_PROVIDERRowDeleted(this, new APPOINTMENT_PROVIDERRowChangeEvent(((APPOINTMENT_PROVIDERRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.APPOINTMENT_PROVIDERRowDeleting != null)) {
                    this.APPOINTMENT_PROVIDERRowDeleting(this, new APPOINTMENT_PROVIDERRowChangeEvent(((APPOINTMENT_PROVIDERRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveAPPOINTMENT_PROVIDERRow(APPOINTMENT_PROVIDERRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                ScheduleDataset ds = new ScheduleDataset();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "APPOINTMENT_PROVIDERDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class CATEGORYDataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columnaccount_guid;
            
            private global::System.Data.DataColumn columncategory_guid;
            
            private global::System.Data.DataColumn columnname;
            
            private global::System.Data.DataColumn columncolor;
            
            private global::System.Data.DataColumn columnnotes;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public CATEGORYDataTable() {
                this.TableName = "CATEGORY";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal CATEGORYDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected CATEGORYDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn account_guidColumn {
                get {
                    return this.columnaccount_guid;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn category_guidColumn {
                get {
                    return this.columncategory_guid;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn nameColumn {
                get {
                    return this.columnname;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn colorColumn {
                get {
                    return this.columncolor;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn notesColumn {
                get {
                    return this.columnnotes;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public CATEGORYRow this[int index] {
                get {
                    return ((CATEGORYRow)(this.Rows[index]));
                }
            }
            
            public event CATEGORYRowChangeEventHandler CATEGORYRowChanging;
            
            public event CATEGORYRowChangeEventHandler CATEGORYRowChanged;
            
            public event CATEGORYRowChangeEventHandler CATEGORYRowDeleting;
            
            public event CATEGORYRowChangeEventHandler CATEGORYRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddCATEGORYRow(CATEGORYRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public CATEGORYRow AddCATEGORYRow(string account_guid, string category_guid, string name, int color, string notes) {
                CATEGORYRow rowCATEGORYRow = ((CATEGORYRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        account_guid,
                        category_guid,
                        name,
                        color,
                        notes};
                rowCATEGORYRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowCATEGORYRow);
                return rowCATEGORYRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public CATEGORYRow FindBycategory_guid(string category_guid) {
                return ((CATEGORYRow)(this.Rows.Find(new object[] {
                            category_guid})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                CATEGORYDataTable cln = ((CATEGORYDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new CATEGORYDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnaccount_guid = base.Columns["account_guid"];
                this.columncategory_guid = base.Columns["category_guid"];
                this.columnname = base.Columns["name"];
                this.columncolor = base.Columns["color"];
                this.columnnotes = base.Columns["notes"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnaccount_guid = new global::System.Data.DataColumn("account_guid", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnaccount_guid);
                this.columncategory_guid = new global::System.Data.DataColumn("category_guid", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncategory_guid);
                this.columnname = new global::System.Data.DataColumn("name", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnname);
                this.columncolor = new global::System.Data.DataColumn("color", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncolor);
                this.columnnotes = new global::System.Data.DataColumn("notes", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnnotes);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("PK_CATEGORY", new global::System.Data.DataColumn[] {
                                this.columncategory_guid}, true));
                this.columncategory_guid.AllowDBNull = false;
                this.columncategory_guid.Unique = true;
                this.columnname.AllowDBNull = false;
                this.columncolor.AllowDBNull = false;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public CATEGORYRow NewCATEGORYRow() {
                return ((CATEGORYRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new CATEGORYRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(CATEGORYRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.CATEGORYRowChanged != null)) {
                    this.CATEGORYRowChanged(this, new CATEGORYRowChangeEvent(((CATEGORYRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.CATEGORYRowChanging != null)) {
                    this.CATEGORYRowChanging(this, new CATEGORYRowChangeEvent(((CATEGORYRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.CATEGORYRowDeleted != null)) {
                    this.CATEGORYRowDeleted(this, new CATEGORYRowChangeEvent(((CATEGORYRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.CATEGORYRowDeleting != null)) {
                    this.CATEGORYRowDeleting(this, new CATEGORYRowChangeEvent(((CATEGORYRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveCATEGORYRow(CATEGORYRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                ScheduleDataset ds = new ScheduleDataset();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "CATEGORYDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class PROVIDERDataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columnaccount_guid;
            
            private global::System.Data.DataColumn columnprovider_guid;
            
            private global::System.Data.DataColumn columnname;
            
            private global::System.Data.DataColumn columncolor;
            
            private global::System.Data.DataColumn columnnotes;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public PROVIDERDataTable() {
                this.TableName = "PROVIDER";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal PROVIDERDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected PROVIDERDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn account_guidColumn {
                get {
                    return this.columnaccount_guid;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn provider_guidColumn {
                get {
                    return this.columnprovider_guid;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn nameColumn {
                get {
                    return this.columnname;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn colorColumn {
                get {
                    return this.columncolor;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn notesColumn {
                get {
                    return this.columnnotes;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public PROVIDERRow this[int index] {
                get {
                    return ((PROVIDERRow)(this.Rows[index]));
                }
            }
            
            public event PROVIDERRowChangeEventHandler PROVIDERRowChanging;
            
            public event PROVIDERRowChangeEventHandler PROVIDERRowChanged;
            
            public event PROVIDERRowChangeEventHandler PROVIDERRowDeleting;
            
            public event PROVIDERRowChangeEventHandler PROVIDERRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddPROVIDERRow(PROVIDERRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public PROVIDERRow AddPROVIDERRow(string account_guid, string provider_guid, string name, int color, string notes) {
                PROVIDERRow rowPROVIDERRow = ((PROVIDERRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        account_guid,
                        provider_guid,
                        name,
                        color,
                        notes};
                rowPROVIDERRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowPROVIDERRow);
                return rowPROVIDERRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public PROVIDERRow FindByprovider_guid(string provider_guid) {
                return ((PROVIDERRow)(this.Rows.Find(new object[] {
                            provider_guid})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                PROVIDERDataTable cln = ((PROVIDERDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new PROVIDERDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnaccount_guid = base.Columns["account_guid"];
                this.columnprovider_guid = base.Columns["provider_guid"];
                this.columnname = base.Columns["name"];
                this.columncolor = base.Columns["color"];
                this.columnnotes = base.Columns["notes"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnaccount_guid = new global::System.Data.DataColumn("account_guid", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnaccount_guid);
                this.columnprovider_guid = new global::System.Data.DataColumn("provider_guid", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnprovider_guid);
                this.columnname = new global::System.Data.DataColumn("name", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnname);
                this.columncolor = new global::System.Data.DataColumn("color", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncolor);
                this.columnnotes = new global::System.Data.DataColumn("notes", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnnotes);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("PK_PROVIDER", new global::System.Data.DataColumn[] {
                                this.columnprovider_guid}, true));
                this.columnprovider_guid.AllowDBNull = false;
                this.columnprovider_guid.Unique = true;
                this.columnname.AllowDBNull = false;
                this.columncolor.AllowDBNull = false;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public PROVIDERRow NewPROVIDERRow() {
                return ((PROVIDERRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new PROVIDERRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(PROVIDERRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.PROVIDERRowChanged != null)) {
                    this.PROVIDERRowChanged(this, new PROVIDERRowChangeEvent(((PROVIDERRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.PROVIDERRowChanging != null)) {
                    this.PROVIDERRowChanging(this, new PROVIDERRowChangeEvent(((PROVIDERRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.PROVIDERRowDeleted != null)) {
                    this.PROVIDERRowDeleted(this, new PROVIDERRowChangeEvent(((PROVIDERRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.PROVIDERRowDeleting != null)) {
                    this.PROVIDERRowDeleting(this, new PROVIDERRowChangeEvent(((PROVIDERRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemovePROVIDERRow(PROVIDERRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                ScheduleDataset ds = new ScheduleDataset();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "PROVIDERDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class RECURRENCEDataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columnaccount_guid;
            
            private global::System.Data.DataColumn columnrecurrence_guid;
            
            private global::System.Data.DataColumn columnrecurrence_interval;
            
            private global::System.Data.DataColumn columnstart_date;
            
            private global::System.Data.DataColumn columnend_type;
            
            private global::System.Data.DataColumn columnend_iterations;
            
            private global::System.Data.DataColumn columnend_date;
            
            private global::System.Data.DataColumn columnlast_create_date;
            
            private global::System.Data.DataColumn columnlast_create_groupId;
            
            private global::System.Data.DataColumn columncheck_only;
            
            private global::System.Data.DataColumn columnday_recurrence_mode;
            
            private global::System.Data.DataColumn columnday_day_interval;
            
            private global::System.Data.DataColumn columnmonth_recurrence_mode;
            
            private global::System.Data.DataColumn columnmonth_month_interval;
            
            private global::System.Data.DataColumn columnmonth_day_interval;
            
            private global::System.Data.DataColumn columnmonth_day_ordinal;
            
            private global::System.Data.DataColumn columnmonth_day_position;
            
            private global::System.Data.DataColumn columnweek_week_interval;
            
            private global::System.Data.DataColumn columnweek_use_sun;
            
            private global::System.Data.DataColumn columnweek_use_mon;
            
            private global::System.Data.DataColumn columnweek_use_tue;
            
            private global::System.Data.DataColumn columnweek_use_wed;
            
            private global::System.Data.DataColumn columnweek_use_thu;
            
            private global::System.Data.DataColumn columnweek_use_fri;
            
            private global::System.Data.DataColumn columnweek_use_sat;
            
            private global::System.Data.DataColumn columnyear_day_interval;
            
            private global::System.Data.DataColumn columnyear_day_ordinal;
            
            private global::System.Data.DataColumn columnyear_day_position;
            
            private global::System.Data.DataColumn columnyear_month_interval;
            
            private global::System.Data.DataColumn columnyear_month_ordinal;
            
            private global::System.Data.DataColumn columnyear_recurrence_mode;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public RECURRENCEDataTable() {
                this.TableName = "RECURRENCE";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal RECURRENCEDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected RECURRENCEDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn account_guidColumn {
                get {
                    return this.columnaccount_guid;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn recurrence_guidColumn {
                get {
                    return this.columnrecurrence_guid;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn recurrence_intervalColumn {
                get {
                    return this.columnrecurrence_interval;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn start_dateColumn {
                get {
                    return this.columnstart_date;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn end_typeColumn {
                get {
                    return this.columnend_type;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn end_iterationsColumn {
                get {
                    return this.columnend_iterations;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn end_dateColumn {
                get {
                    return this.columnend_date;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn last_create_dateColumn {
                get {
                    return this.columnlast_create_date;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn last_create_groupIdColumn {
                get {
                    return this.columnlast_create_groupId;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn check_onlyColumn {
                get {
                    return this.columncheck_only;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn day_recurrence_modeColumn {
                get {
                    return this.columnday_recurrence_mode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn day_day_intervalColumn {
                get {
                    return this.columnday_day_interval;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn month_recurrence_modeColumn {
                get {
                    return this.columnmonth_recurrence_mode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn month_month_intervalColumn {
                get {
                    return this.columnmonth_month_interval;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn month_day_intervalColumn {
                get {
                    return this.columnmonth_day_interval;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn month_day_ordinalColumn {
                get {
                    return this.columnmonth_day_ordinal;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn month_day_positionColumn {
                get {
                    return this.columnmonth_day_position;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn week_week_intervalColumn {
                get {
                    return this.columnweek_week_interval;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn week_use_sunColumn {
                get {
                    return this.columnweek_use_sun;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn week_use_monColumn {
                get {
                    return this.columnweek_use_mon;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn week_use_tueColumn {
                get {
                    return this.columnweek_use_tue;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn week_use_wedColumn {
                get {
                    return this.columnweek_use_wed;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn week_use_thuColumn {
                get {
                    return this.columnweek_use_thu;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn week_use_friColumn {
                get {
                    return this.columnweek_use_fri;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn week_use_satColumn {
                get {
                    return this.columnweek_use_sat;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn year_day_intervalColumn {
                get {
                    return this.columnyear_day_interval;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn year_day_ordinalColumn {
                get {
                    return this.columnyear_day_ordinal;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn year_day_positionColumn {
                get {
                    return this.columnyear_day_position;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn year_month_intervalColumn {
                get {
                    return this.columnyear_month_interval;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn year_month_ordinalColumn {
                get {
                    return this.columnyear_month_ordinal;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn year_recurrence_modeColumn {
                get {
                    return this.columnyear_recurrence_mode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public RECURRENCERow this[int index] {
                get {
                    return ((RECURRENCERow)(this.Rows[index]));
                }
            }
            
            public event RECURRENCERowChangeEventHandler RECURRENCERowChanging;
            
            public event RECURRENCERowChangeEventHandler RECURRENCERowChanged;
            
            public event RECURRENCERowChangeEventHandler RECURRENCERowDeleting;
            
            public event RECURRENCERowChangeEventHandler RECURRENCERowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddRECURRENCERow(RECURRENCERow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public RECURRENCERow AddRECURRENCERow(
                        string account_guid, 
                        string recurrence_guid, 
                        int recurrence_interval, 
                        System.DateTime start_date, 
                        int end_type, 
                        int end_iterations, 
                        System.DateTime end_date, 
                        System.DateTime last_create_date, 
                        string last_create_groupId, 
                        bool check_only, 
                        int day_recurrence_mode, 
                        int day_day_interval, 
                        int month_recurrence_mode, 
                        int month_month_interval, 
                        int month_day_interval, 
                        int month_day_ordinal, 
                        int month_day_position, 
                        int week_week_interval, 
                        bool week_use_sun, 
                        bool week_use_mon, 
                        bool week_use_tue, 
                        bool week_use_wed, 
                        bool week_use_thu, 
                        bool week_use_fri, 
                        bool week_use_sat, 
                        int year_day_interval, 
                        int year_day_ordinal, 
                        int year_day_position, 
                        int year_month_interval, 
                        int year_month_ordinal, 
                        int year_recurrence_mode) {
                RECURRENCERow rowRECURRENCERow = ((RECURRENCERow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        account_guid,
                        recurrence_guid,
                        recurrence_interval,
                        start_date,
                        end_type,
                        end_iterations,
                        end_date,
                        last_create_date,
                        last_create_groupId,
                        check_only,
                        day_recurrence_mode,
                        day_day_interval,
                        month_recurrence_mode,
                        month_month_interval,
                        month_day_interval,
                        month_day_ordinal,
                        month_day_position,
                        week_week_interval,
                        week_use_sun,
                        week_use_mon,
                        week_use_tue,
                        week_use_wed,
                        week_use_thu,
                        week_use_fri,
                        week_use_sat,
                        year_day_interval,
                        year_day_ordinal,
                        year_day_position,
                        year_month_interval,
                        year_month_ordinal,
                        year_recurrence_mode};
                rowRECURRENCERow.ItemArray = columnValuesArray;
                this.Rows.Add(rowRECURRENCERow);
                return rowRECURRENCERow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                RECURRENCEDataTable cln = ((RECURRENCEDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new RECURRENCEDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnaccount_guid = base.Columns["account_guid"];
                this.columnrecurrence_guid = base.Columns["recurrence_guid"];
                this.columnrecurrence_interval = base.Columns["recurrence_interval"];
                this.columnstart_date = base.Columns["start_date"];
                this.columnend_type = base.Columns["end_type"];
                this.columnend_iterations = base.Columns["end_iterations"];
                this.columnend_date = base.Columns["end_date"];
                this.columnlast_create_date = base.Columns["last_create_date"];
                this.columnlast_create_groupId = base.Columns["last_create_groupId"];
                this.columncheck_only = base.Columns["check_only"];
                this.columnday_recurrence_mode = base.Columns["day_recurrence_mode"];
                this.columnday_day_interval = base.Columns["day_day_interval"];
                this.columnmonth_recurrence_mode = base.Columns["month_recurrence_mode"];
                this.columnmonth_month_interval = base.Columns["month_month_interval"];
                this.columnmonth_day_interval = base.Columns["month_day_interval"];
                this.columnmonth_day_ordinal = base.Columns["month_day_ordinal"];
                this.columnmonth_day_position = base.Columns["month_day_position"];
                this.columnweek_week_interval = base.Columns["week_week_interval"];
                this.columnweek_use_sun = base.Columns["week_use_sun"];
                this.columnweek_use_mon = base.Columns["week_use_mon"];
                this.columnweek_use_tue = base.Columns["week_use_tue"];
                this.columnweek_use_wed = base.Columns["week_use_wed"];
                this.columnweek_use_thu = base.Columns["week_use_thu"];
                this.columnweek_use_fri = base.Columns["week_use_fri"];
                this.columnweek_use_sat = base.Columns["week_use_sat"];
                this.columnyear_day_interval = base.Columns["year_day_interval"];
                this.columnyear_day_ordinal = base.Columns["year_day_ordinal"];
                this.columnyear_day_position = base.Columns["year_day_position"];
                this.columnyear_month_interval = base.Columns["year_month_interval"];
                this.columnyear_month_ordinal = base.Columns["year_month_ordinal"];
                this.columnyear_recurrence_mode = base.Columns["year_recurrence_mode"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnaccount_guid = new global::System.Data.DataColumn("account_guid", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnaccount_guid);
                this.columnrecurrence_guid = new global::System.Data.DataColumn("recurrence_guid", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnrecurrence_guid);
                this.columnrecurrence_interval = new global::System.Data.DataColumn("recurrence_interval", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnrecurrence_interval);
                this.columnstart_date = new global::System.Data.DataColumn("start_date", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnstart_date);
                this.columnend_type = new global::System.Data.DataColumn("end_type", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnend_type);
                this.columnend_iterations = new global::System.Data.DataColumn("end_iterations", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnend_iterations);
                this.columnend_date = new global::System.Data.DataColumn("end_date", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnend_date);
                this.columnlast_create_date = new global::System.Data.DataColumn("last_create_date", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnlast_create_date);
                this.columnlast_create_groupId = new global::System.Data.DataColumn("last_create_groupId", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnlast_create_groupId);
                this.columncheck_only = new global::System.Data.DataColumn("check_only", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncheck_only);
                this.columnday_recurrence_mode = new global::System.Data.DataColumn("day_recurrence_mode", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnday_recurrence_mode);
                this.columnday_day_interval = new global::System.Data.DataColumn("day_day_interval", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnday_day_interval);
                this.columnmonth_recurrence_mode = new global::System.Data.DataColumn("month_recurrence_mode", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnmonth_recurrence_mode);
                this.columnmonth_month_interval = new global::System.Data.DataColumn("month_month_interval", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnmonth_month_interval);
                this.columnmonth_day_interval = new global::System.Data.DataColumn("month_day_interval", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnmonth_day_interval);
                this.columnmonth_day_ordinal = new global::System.Data.DataColumn("month_day_ordinal", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnmonth_day_ordinal);
                this.columnmonth_day_position = new global::System.Data.DataColumn("month_day_position", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnmonth_day_position);
                this.columnweek_week_interval = new global::System.Data.DataColumn("week_week_interval", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnweek_week_interval);
                this.columnweek_use_sun = new global::System.Data.DataColumn("week_use_sun", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnweek_use_sun);
                this.columnweek_use_mon = new global::System.Data.DataColumn("week_use_mon", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnweek_use_mon);
                this.columnweek_use_tue = new global::System.Data.DataColumn("week_use_tue", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnweek_use_tue);
                this.columnweek_use_wed = new global::System.Data.DataColumn("week_use_wed", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnweek_use_wed);
                this.columnweek_use_thu = new global::System.Data.DataColumn("week_use_thu", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnweek_use_thu);
                this.columnweek_use_fri = new global::System.Data.DataColumn("week_use_fri", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnweek_use_fri);
                this.columnweek_use_sat = new global::System.Data.DataColumn("week_use_sat", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnweek_use_sat);
                this.columnyear_day_interval = new global::System.Data.DataColumn("year_day_interval", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnyear_day_interval);
                this.columnyear_day_ordinal = new global::System.Data.DataColumn("year_day_ordinal", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnyear_day_ordinal);
                this.columnyear_day_position = new global::System.Data.DataColumn("year_day_position", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnyear_day_position);
                this.columnyear_month_interval = new global::System.Data.DataColumn("year_month_interval", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnyear_month_interval);
                this.columnyear_month_ordinal = new global::System.Data.DataColumn("year_month_ordinal", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnyear_month_ordinal);
                this.columnyear_recurrence_mode = new global::System.Data.DataColumn("year_recurrence_mode", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnyear_recurrence_mode);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("key1", new global::System.Data.DataColumn[] {
                                this.columnrecurrence_guid}, false));
                this.columnrecurrence_guid.AllowDBNull = false;
                this.columnrecurrence_guid.Unique = true;
                this.columnrecurrence_interval.AllowDBNull = false;
                this.columnstart_date.AllowDBNull = false;
                this.columnend_type.AllowDBNull = false;
                this.columnend_iterations.AllowDBNull = false;
                this.columnend_date.AllowDBNull = false;
                this.columnlast_create_date.AllowDBNull = false;
                this.columnlast_create_groupId.AllowDBNull = false;
                this.columncheck_only.AllowDBNull = false;
                this.columnday_recurrence_mode.AllowDBNull = false;
                this.columnday_day_interval.AllowDBNull = false;
                this.columnmonth_recurrence_mode.AllowDBNull = false;
                this.columnmonth_month_interval.AllowDBNull = false;
                this.columnmonth_day_interval.AllowDBNull = false;
                this.columnmonth_day_ordinal.AllowDBNull = false;
                this.columnmonth_day_position.AllowDBNull = false;
                this.columnweek_week_interval.AllowDBNull = false;
                this.columnweek_use_sun.AllowDBNull = false;
                this.columnweek_use_mon.AllowDBNull = false;
                this.columnweek_use_tue.AllowDBNull = false;
                this.columnweek_use_wed.AllowDBNull = false;
                this.columnweek_use_thu.AllowDBNull = false;
                this.columnweek_use_fri.AllowDBNull = false;
                this.columnweek_use_sat.AllowDBNull = false;
                this.columnyear_day_interval.AllowDBNull = false;
                this.columnyear_day_ordinal.AllowDBNull = false;
                this.columnyear_day_position.AllowDBNull = false;
                this.columnyear_month_interval.AllowDBNull = false;
                this.columnyear_month_ordinal.AllowDBNull = false;
                this.columnyear_recurrence_mode.AllowDBNull = false;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public RECURRENCERow NewRECURRENCERow() {
                return ((RECURRENCERow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new RECURRENCERow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(RECURRENCERow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.RECURRENCERowChanged != null)) {
                    this.RECURRENCERowChanged(this, new RECURRENCERowChangeEvent(((RECURRENCERow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.RECURRENCERowChanging != null)) {
                    this.RECURRENCERowChanging(this, new RECURRENCERowChangeEvent(((RECURRENCERow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.RECURRENCERowDeleted != null)) {
                    this.RECURRENCERowDeleted(this, new RECURRENCERowChangeEvent(((RECURRENCERow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.RECURRENCERowDeleting != null)) {
                    this.RECURRENCERowDeleting(this, new RECURRENCERowChangeEvent(((RECURRENCERow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveRECURRENCERow(RECURRENCERow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                ScheduleDataset ds = new ScheduleDataset();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "RECURRENCEDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class RESOURCEDataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columnaccount_guid;
            
            private global::System.Data.DataColumn columnresource_guid;
            
            private global::System.Data.DataColumn columnname;
            
            private global::System.Data.DataColumn columncolor;
            
            private global::System.Data.DataColumn columnnotes;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public RESOURCEDataTable() {
                this.TableName = "RESOURCE";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal RESOURCEDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected RESOURCEDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn account_guidColumn {
                get {
                    return this.columnaccount_guid;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn resource_guidColumn {
                get {
                    return this.columnresource_guid;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn nameColumn {
                get {
                    return this.columnname;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn colorColumn {
                get {
                    return this.columncolor;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn notesColumn {
                get {
                    return this.columnnotes;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public RESOURCERow this[int index] {
                get {
                    return ((RESOURCERow)(this.Rows[index]));
                }
            }
            
            public event RESOURCERowChangeEventHandler RESOURCERowChanging;
            
            public event RESOURCERowChangeEventHandler RESOURCERowChanged;
            
            public event RESOURCERowChangeEventHandler RESOURCERowDeleting;
            
            public event RESOURCERowChangeEventHandler RESOURCERowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddRESOURCERow(RESOURCERow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public RESOURCERow AddRESOURCERow(string account_guid, string resource_guid, string name, int color, string notes) {
                RESOURCERow rowRESOURCERow = ((RESOURCERow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        account_guid,
                        resource_guid,
                        name,
                        color,
                        notes};
                rowRESOURCERow.ItemArray = columnValuesArray;
                this.Rows.Add(rowRESOURCERow);
                return rowRESOURCERow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                RESOURCEDataTable cln = ((RESOURCEDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new RESOURCEDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnaccount_guid = base.Columns["account_guid"];
                this.columnresource_guid = base.Columns["resource_guid"];
                this.columnname = base.Columns["name"];
                this.columncolor = base.Columns["color"];
                this.columnnotes = base.Columns["notes"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnaccount_guid = new global::System.Data.DataColumn("account_guid", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnaccount_guid);
                this.columnresource_guid = new global::System.Data.DataColumn("resource_guid", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnresource_guid);
                this.columnname = new global::System.Data.DataColumn("name", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnname);
                this.columncolor = new global::System.Data.DataColumn("color", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncolor);
                this.columnnotes = new global::System.Data.DataColumn("notes", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnnotes);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("key2", new global::System.Data.DataColumn[] {
                                this.columnresource_guid}, false));
                this.columnresource_guid.AllowDBNull = false;
                this.columnresource_guid.Unique = true;
                this.columnname.AllowDBNull = false;
                this.columncolor.AllowDBNull = false;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public RESOURCERow NewRESOURCERow() {
                return ((RESOURCERow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new RESOURCERow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(RESOURCERow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.RESOURCERowChanged != null)) {
                    this.RESOURCERowChanged(this, new RESOURCERowChangeEvent(((RESOURCERow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.RESOURCERowChanging != null)) {
                    this.RESOURCERowChanging(this, new RESOURCERowChangeEvent(((RESOURCERow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.RESOURCERowDeleted != null)) {
                    this.RESOURCERowDeleted(this, new RESOURCERowChangeEvent(((RESOURCERow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.RESOURCERowDeleting != null)) {
                    this.RESOURCERowDeleting(this, new RESOURCERowChangeEvent(((RESOURCERow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveRESOURCERow(RESOURCERow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                ScheduleDataset ds = new ScheduleDataset();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "RESOURCEDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class APPOINTMENT_RESOURCEDataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columnappointment_guid;
            
            private global::System.Data.DataColumn columnresource_guid;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public APPOINTMENT_RESOURCEDataTable() {
                this.TableName = "APPOINTMENT_RESOURCE";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal APPOINTMENT_RESOURCEDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected APPOINTMENT_RESOURCEDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn appointment_guidColumn {
                get {
                    return this.columnappointment_guid;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn resource_guidColumn {
                get {
                    return this.columnresource_guid;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public APPOINTMENT_RESOURCERow this[int index] {
                get {
                    return ((APPOINTMENT_RESOURCERow)(this.Rows[index]));
                }
            }
            
            public event APPOINTMENT_RESOURCERowChangeEventHandler APPOINTMENT_RESOURCERowChanging;
            
            public event APPOINTMENT_RESOURCERowChangeEventHandler APPOINTMENT_RESOURCERowChanged;
            
            public event APPOINTMENT_RESOURCERowChangeEventHandler APPOINTMENT_RESOURCERowDeleting;
            
            public event APPOINTMENT_RESOURCERowChangeEventHandler APPOINTMENT_RESOURCERowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddAPPOINTMENT_RESOURCERow(APPOINTMENT_RESOURCERow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public APPOINTMENT_RESOURCERow AddAPPOINTMENT_RESOURCERow(APPOINTMENTRow parentAPPOINTMENTRowByAPPOINTMENTAPPOINTMENT_RESOURCE, RESOURCERow parentRESOURCERowByRESOURCEAPPOINTMENT_RESOURCE) {
                APPOINTMENT_RESOURCERow rowAPPOINTMENT_RESOURCERow = ((APPOINTMENT_RESOURCERow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        null};
                if ((parentAPPOINTMENTRowByAPPOINTMENTAPPOINTMENT_RESOURCE != null)) {
                    columnValuesArray[0] = parentAPPOINTMENTRowByAPPOINTMENTAPPOINTMENT_RESOURCE[0];
                }
                if ((parentRESOURCERowByRESOURCEAPPOINTMENT_RESOURCE != null)) {
                    columnValuesArray[1] = parentRESOURCERowByRESOURCEAPPOINTMENT_RESOURCE[1];
                }
                rowAPPOINTMENT_RESOURCERow.ItemArray = columnValuesArray;
                this.Rows.Add(rowAPPOINTMENT_RESOURCERow);
                return rowAPPOINTMENT_RESOURCERow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                APPOINTMENT_RESOURCEDataTable cln = ((APPOINTMENT_RESOURCEDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new APPOINTMENT_RESOURCEDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnappointment_guid = base.Columns["appointment_guid"];
                this.columnresource_guid = base.Columns["resource_guid"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnappointment_guid = new global::System.Data.DataColumn("appointment_guid", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnappointment_guid);
                this.columnresource_guid = new global::System.Data.DataColumn("resource_guid", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnresource_guid);
                this.columnappointment_guid.AllowDBNull = false;
                this.columnresource_guid.AllowDBNull = false;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public APPOINTMENT_RESOURCERow NewAPPOINTMENT_RESOURCERow() {
                return ((APPOINTMENT_RESOURCERow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new APPOINTMENT_RESOURCERow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(APPOINTMENT_RESOURCERow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.APPOINTMENT_RESOURCERowChanged != null)) {
                    this.APPOINTMENT_RESOURCERowChanged(this, new APPOINTMENT_RESOURCERowChangeEvent(((APPOINTMENT_RESOURCERow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.APPOINTMENT_RESOURCERowChanging != null)) {
                    this.APPOINTMENT_RESOURCERowChanging(this, new APPOINTMENT_RESOURCERowChangeEvent(((APPOINTMENT_RESOURCERow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.APPOINTMENT_RESOURCERowDeleted != null)) {
                    this.APPOINTMENT_RESOURCERowDeleted(this, new APPOINTMENT_RESOURCERowChangeEvent(((APPOINTMENT_RESOURCERow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.APPOINTMENT_RESOURCERowDeleting != null)) {
                    this.APPOINTMENT_RESOURCERowDeleting(this, new APPOINTMENT_RESOURCERowChangeEvent(((APPOINTMENT_RESOURCERow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveAPPOINTMENT_RESOURCERow(APPOINTMENT_RESOURCERow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                ScheduleDataset ds = new ScheduleDataset();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "APPOINTMENT_RESOURCEDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class ROOMRow : global::System.Data.DataRow {
            
            private ROOMDataTable tableROOM;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal ROOMRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableROOM = ((ROOMDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string room_guid {
                get {
                    return ((string)(this[this.tableROOM.room_guidColumn]));
                }
                set {
                    this[this.tableROOM.room_guidColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string name {
                get {
                    return ((string)(this[this.tableROOM.nameColumn]));
                }
                set {
                    this[this.tableROOM.nameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string notes {
                get {
                    try {
                        return ((string)(this[this.tableROOM.notesColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'notes\' in table \'ROOM\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableROOM.notesColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool visible {
                get {
                    try {
                        return ((bool)(this[this.tableROOM.visibleColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'visible\' in table \'ROOM\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableROOM.visibleColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsnotesNull() {
                return this.IsNull(this.tableROOM.notesColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetnotesNull() {
                this[this.tableROOM.notesColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsvisibleNull() {
                return this.IsNull(this.tableROOM.visibleColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetvisibleNull() {
                this[this.tableROOM.visibleColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public APPOINTMENTRow[] GetAPPOINTMENTRows() {
                if ((this.Table.ChildRelations["FK_ROOM_APPOINTMENT"] == null)) {
                    return new APPOINTMENTRow[0];
                }
                else {
                    return ((APPOINTMENTRow[])(base.GetChildRows(this.Table.ChildRelations["FK_ROOM_APPOINTMENT"])));
                }
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class APPOINTMENTRow : global::System.Data.DataRow {
            
            private APPOINTMENTDataTable tableAPPOINTMENT;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal APPOINTMENTRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableAPPOINTMENT = ((APPOINTMENTDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string appointment_guid {
                get {
                    return ((string)(this[this.tableAPPOINTMENT.appointment_guidColumn]));
                }
                set {
                    this[this.tableAPPOINTMENT.appointment_guidColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime start_date {
                get {
                    return ((global::System.DateTime)(this[this.tableAPPOINTMENT.start_dateColumn]));
                }
                set {
                    this[this.tableAPPOINTMENT.start_dateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int length {
                get {
                    return ((int)(this[this.tableAPPOINTMENT.lengthColumn]));
                }
                set {
                    this[this.tableAPPOINTMENT.lengthColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string subject {
                get {
                    try {
                        return ((string)(this[this.tableAPPOINTMENT.subjectColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'subject\' in table \'APPOINTMENT\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableAPPOINTMENT.subjectColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string text {
                get {
                    try {
                        return ((string)(this[this.tableAPPOINTMENT.textColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'text\' in table \'APPOINTMENT\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableAPPOINTMENT.textColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string notes {
                get {
                    try {
                        return ((string)(this[this.tableAPPOINTMENT.notesColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'notes\' in table \'APPOINTMENT\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableAPPOINTMENT.notesColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string tooltiptext {
                get {
                    try {
                        return ((string)(this[this.tableAPPOINTMENT.tooltiptextColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'tooltiptext\' in table \'APPOINTMENT\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableAPPOINTMENT.tooltiptextColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool visible {
                get {
                    try {
                        return ((bool)(this[this.tableAPPOINTMENT.visibleColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'visible\' in table \'APPOINTMENT\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableAPPOINTMENT.visibleColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool blockout {
                get {
                    try {
                        return ((bool)(this[this.tableAPPOINTMENT.blockoutColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'blockout\' in table \'APPOINTMENT\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableAPPOINTMENT.blockoutColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool isevent {
                get {
                    try {
                        return ((bool)(this[this.tableAPPOINTMENT.iseventColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'isevent\' in table \'APPOINTMENT\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableAPPOINTMENT.iseventColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool isactivity {
                get {
                    try {
                        return ((bool)(this[this.tableAPPOINTMENT.isactivityColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'isactivity\' in table \'APPOINTMENT\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableAPPOINTMENT.isactivityColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool isflagged {
                get {
                    try {
                        return ((bool)(this[this.tableAPPOINTMENT.isflaggedColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'isflagged\' in table \'APPOINTMENT\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableAPPOINTMENT.isflaggedColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool isreadonly {
                get {
                    try {
                        return ((bool)(this[this.tableAPPOINTMENT.isreadonlyColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'isreadonly\' in table \'APPOINTMENT\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableAPPOINTMENT.isreadonlyColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int maxlength {
                get {
                    try {
                        return ((int)(this[this.tableAPPOINTMENT.maxlengthColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'maxlength\' in table \'APPOINTMENT\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableAPPOINTMENT.maxlengthColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int minlength {
                get {
                    try {
                        return ((int)(this[this.tableAPPOINTMENT.minlengthColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'minlength\' in table \'APPOINTMENT\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableAPPOINTMENT.minlengthColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string recurrence_guid {
                get {
                    try {
                        return ((string)(this[this.tableAPPOINTMENT.recurrence_guidColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'recurrence_guid\' in table \'APPOINTMENT\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableAPPOINTMENT.recurrence_guidColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string recurrence_stamp {
                get {
                    try {
                        return ((string)(this[this.tableAPPOINTMENT.recurrence_stampColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'recurrence_stamp\' in table \'APPOINTMENT\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableAPPOINTMENT.recurrence_stampColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string priority_guid {
                get {
                    try {
                        return ((string)(this[this.tableAPPOINTMENT.priority_guidColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'priority_guid\' in table \'APPOINTMENT\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableAPPOINTMENT.priority_guidColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string appearance_guid {
                get {
                    try {
                        return ((string)(this[this.tableAPPOINTMENT.appearance_guidColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'appearance_guid\' in table \'APPOINTMENT\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableAPPOINTMENT.appearance_guidColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string room_guid {
                get {
                    try {
                        return ((string)(this[this.tableAPPOINTMENT.room_guidColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'room_guid\' in table \'APPOINTMENT\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableAPPOINTMENT.room_guidColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string alarm_window_text {
                get {
                    try {
                        return ((string)(this[this.tableAPPOINTMENT.alarm_window_textColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'alarm_window_text\' in table \'APPOINTMENT\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableAPPOINTMENT.alarm_window_textColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool alarm_is_armed {
                get {
                    try {
                        return ((bool)(this[this.tableAPPOINTMENT.alarm_is_armedColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'alarm_is_armed\' in table \'APPOINTMENT\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableAPPOINTMENT.alarm_is_armedColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int alarm_reminder {
                get {
                    try {
                        return ((int)(this[this.tableAPPOINTMENT.alarm_reminderColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'alarm_reminder\' in table \'APPOINTMENT\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableAPPOINTMENT.alarm_reminderColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool alarm_allow_open {
                get {
                    try {
                        return ((bool)(this[this.tableAPPOINTMENT.alarm_allow_openColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'alarm_allow_open\' in table \'APPOINTMENT\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableAPPOINTMENT.alarm_allow_openColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool alarm_allow_snooze {
                get {
                    try {
                        return ((bool)(this[this.tableAPPOINTMENT.alarm_allow_snoozeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'alarm_allow_snooze\' in table \'APPOINTMENT\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableAPPOINTMENT.alarm_allow_snoozeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string alarm_application_name {
                get {
                    try {
                        return ((string)(this[this.tableAPPOINTMENT.alarm_application_nameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'alarm_application_name\' in table \'APPOINTMENT\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableAPPOINTMENT.alarm_application_nameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string alarm_application_args {
                get {
                    try {
                        return ((string)(this[this.tableAPPOINTMENT.alarm_application_argsColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'alarm_application_args\' in table \'APPOINTMENT\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableAPPOINTMENT.alarm_application_argsColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ROOMRow ROOMRow {
                get {
                    return ((ROOMRow)(this.GetParentRow(this.Table.ParentRelations["FK_ROOM_APPOINTMENT"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["FK_ROOM_APPOINTMENT"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IssubjectNull() {
                return this.IsNull(this.tableAPPOINTMENT.subjectColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetsubjectNull() {
                this[this.tableAPPOINTMENT.subjectColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IstextNull() {
                return this.IsNull(this.tableAPPOINTMENT.textColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SettextNull() {
                this[this.tableAPPOINTMENT.textColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsnotesNull() {
                return this.IsNull(this.tableAPPOINTMENT.notesColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetnotesNull() {
                this[this.tableAPPOINTMENT.notesColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IstooltiptextNull() {
                return this.IsNull(this.tableAPPOINTMENT.tooltiptextColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SettooltiptextNull() {
                this[this.tableAPPOINTMENT.tooltiptextColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsvisibleNull() {
                return this.IsNull(this.tableAPPOINTMENT.visibleColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetvisibleNull() {
                this[this.tableAPPOINTMENT.visibleColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsblockoutNull() {
                return this.IsNull(this.tableAPPOINTMENT.blockoutColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetblockoutNull() {
                this[this.tableAPPOINTMENT.blockoutColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsiseventNull() {
                return this.IsNull(this.tableAPPOINTMENT.iseventColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetiseventNull() {
                this[this.tableAPPOINTMENT.iseventColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsisactivityNull() {
                return this.IsNull(this.tableAPPOINTMENT.isactivityColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetisactivityNull() {
                this[this.tableAPPOINTMENT.isactivityColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsisflaggedNull() {
                return this.IsNull(this.tableAPPOINTMENT.isflaggedColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetisflaggedNull() {
                this[this.tableAPPOINTMENT.isflaggedColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsisreadonlyNull() {
                return this.IsNull(this.tableAPPOINTMENT.isreadonlyColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetisreadonlyNull() {
                this[this.tableAPPOINTMENT.isreadonlyColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsmaxlengthNull() {
                return this.IsNull(this.tableAPPOINTMENT.maxlengthColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetmaxlengthNull() {
                this[this.tableAPPOINTMENT.maxlengthColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsminlengthNull() {
                return this.IsNull(this.tableAPPOINTMENT.minlengthColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetminlengthNull() {
                this[this.tableAPPOINTMENT.minlengthColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isrecurrence_guidNull() {
                return this.IsNull(this.tableAPPOINTMENT.recurrence_guidColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setrecurrence_guidNull() {
                this[this.tableAPPOINTMENT.recurrence_guidColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isrecurrence_stampNull() {
                return this.IsNull(this.tableAPPOINTMENT.recurrence_stampColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setrecurrence_stampNull() {
                this[this.tableAPPOINTMENT.recurrence_stampColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Ispriority_guidNull() {
                return this.IsNull(this.tableAPPOINTMENT.priority_guidColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setpriority_guidNull() {
                this[this.tableAPPOINTMENT.priority_guidColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isappearance_guidNull() {
                return this.IsNull(this.tableAPPOINTMENT.appearance_guidColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setappearance_guidNull() {
                this[this.tableAPPOINTMENT.appearance_guidColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isroom_guidNull() {
                return this.IsNull(this.tableAPPOINTMENT.room_guidColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setroom_guidNull() {
                this[this.tableAPPOINTMENT.room_guidColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isalarm_window_textNull() {
                return this.IsNull(this.tableAPPOINTMENT.alarm_window_textColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setalarm_window_textNull() {
                this[this.tableAPPOINTMENT.alarm_window_textColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isalarm_is_armedNull() {
                return this.IsNull(this.tableAPPOINTMENT.alarm_is_armedColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setalarm_is_armedNull() {
                this[this.tableAPPOINTMENT.alarm_is_armedColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isalarm_reminderNull() {
                return this.IsNull(this.tableAPPOINTMENT.alarm_reminderColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setalarm_reminderNull() {
                this[this.tableAPPOINTMENT.alarm_reminderColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isalarm_allow_openNull() {
                return this.IsNull(this.tableAPPOINTMENT.alarm_allow_openColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setalarm_allow_openNull() {
                this[this.tableAPPOINTMENT.alarm_allow_openColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isalarm_allow_snoozeNull() {
                return this.IsNull(this.tableAPPOINTMENT.alarm_allow_snoozeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setalarm_allow_snoozeNull() {
                this[this.tableAPPOINTMENT.alarm_allow_snoozeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isalarm_application_nameNull() {
                return this.IsNull(this.tableAPPOINTMENT.alarm_application_nameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setalarm_application_nameNull() {
                this[this.tableAPPOINTMENT.alarm_application_nameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isalarm_application_argsNull() {
                return this.IsNull(this.tableAPPOINTMENT.alarm_application_argsColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setalarm_application_argsNull() {
                this[this.tableAPPOINTMENT.alarm_application_argsColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public APPOINTMENT_RESOURCERow[] GetAPPOINTMENT_RESOURCERows() {
                if ((this.Table.ChildRelations["APPOINTMENTAPPOINTMENT_RESOURCE"] == null)) {
                    return new APPOINTMENT_RESOURCERow[0];
                }
                else {
                    return ((APPOINTMENT_RESOURCERow[])(base.GetChildRows(this.Table.ChildRelations["APPOINTMENTAPPOINTMENT_RESOURCE"])));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public APPOINTMENT_PROVIDERRow[] GetAPPOINTMENT_PROVIDERRows() {
                if ((this.Table.ChildRelations["FK_APPOINTMENT_APPOINTMENT_PROVIDER"] == null)) {
                    return new APPOINTMENT_PROVIDERRow[0];
                }
                else {
                    return ((APPOINTMENT_PROVIDERRow[])(base.GetChildRows(this.Table.ChildRelations["FK_APPOINTMENT_APPOINTMENT_PROVIDER"])));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public APPOINTMENT_CATEGORYRow[] GetAPPOINTMENT_CATEGORYRows() {
                if ((this.Table.ChildRelations["FK_APPOINTMENT_APPOINTMENT_CATEGORY"] == null)) {
                    return new APPOINTMENT_CATEGORYRow[0];
                }
                else {
                    return ((APPOINTMENT_CATEGORYRow[])(base.GetChildRows(this.Table.ChildRelations["FK_APPOINTMENT_APPOINTMENT_CATEGORY"])));
                }
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class APPOINTMENT_CATEGORYRow : global::System.Data.DataRow {
            
            private APPOINTMENT_CATEGORYDataTable tableAPPOINTMENT_CATEGORY;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal APPOINTMENT_CATEGORYRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableAPPOINTMENT_CATEGORY = ((APPOINTMENT_CATEGORYDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string appointment_guid {
                get {
                    return ((string)(this[this.tableAPPOINTMENT_CATEGORY.appointment_guidColumn]));
                }
                set {
                    this[this.tableAPPOINTMENT_CATEGORY.appointment_guidColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string category_guid {
                get {
                    return ((string)(this[this.tableAPPOINTMENT_CATEGORY.category_guidColumn]));
                }
                set {
                    this[this.tableAPPOINTMENT_CATEGORY.category_guidColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public APPOINTMENTRow APPOINTMENTRow {
                get {
                    return ((APPOINTMENTRow)(this.GetParentRow(this.Table.ParentRelations["FK_APPOINTMENT_APPOINTMENT_CATEGORY"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["FK_APPOINTMENT_APPOINTMENT_CATEGORY"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public CATEGORYRow CATEGORYRow {
                get {
                    return ((CATEGORYRow)(this.GetParentRow(this.Table.ParentRelations["FK_CATEGORY_APPOINTMENT_CATEGORY"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["FK_CATEGORY_APPOINTMENT_CATEGORY"]);
                }
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class APPOINTMENT_PROVIDERRow : global::System.Data.DataRow {
            
            private APPOINTMENT_PROVIDERDataTable tableAPPOINTMENT_PROVIDER;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal APPOINTMENT_PROVIDERRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableAPPOINTMENT_PROVIDER = ((APPOINTMENT_PROVIDERDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string appointment_guid {
                get {
                    return ((string)(this[this.tableAPPOINTMENT_PROVIDER.appointment_guidColumn]));
                }
                set {
                    this[this.tableAPPOINTMENT_PROVIDER.appointment_guidColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string provider_guid {
                get {
                    return ((string)(this[this.tableAPPOINTMENT_PROVIDER.provider_guidColumn]));
                }
                set {
                    this[this.tableAPPOINTMENT_PROVIDER.provider_guidColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public APPOINTMENTRow APPOINTMENTRow {
                get {
                    return ((APPOINTMENTRow)(this.GetParentRow(this.Table.ParentRelations["FK_APPOINTMENT_APPOINTMENT_PROVIDER"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["FK_APPOINTMENT_APPOINTMENT_PROVIDER"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public PROVIDERRow PROVIDERRow {
                get {
                    return ((PROVIDERRow)(this.GetParentRow(this.Table.ParentRelations["FK_PROVIDER_APPOINTMENT_PROVIDER"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["FK_PROVIDER_APPOINTMENT_PROVIDER"]);
                }
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class CATEGORYRow : global::System.Data.DataRow {
            
            private CATEGORYDataTable tableCATEGORY;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal CATEGORYRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableCATEGORY = ((CATEGORYDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string account_guid {
                get {
                    try {
                        return ((string)(this[this.tableCATEGORY.account_guidColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'account_guid\' in table \'CATEGORY\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCATEGORY.account_guidColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string category_guid {
                get {
                    return ((string)(this[this.tableCATEGORY.category_guidColumn]));
                }
                set {
                    this[this.tableCATEGORY.category_guidColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string name {
                get {
                    return ((string)(this[this.tableCATEGORY.nameColumn]));
                }
                set {
                    this[this.tableCATEGORY.nameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int color {
                get {
                    return ((int)(this[this.tableCATEGORY.colorColumn]));
                }
                set {
                    this[this.tableCATEGORY.colorColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string notes {
                get {
                    try {
                        return ((string)(this[this.tableCATEGORY.notesColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'notes\' in table \'CATEGORY\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCATEGORY.notesColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isaccount_guidNull() {
                return this.IsNull(this.tableCATEGORY.account_guidColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setaccount_guidNull() {
                this[this.tableCATEGORY.account_guidColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsnotesNull() {
                return this.IsNull(this.tableCATEGORY.notesColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetnotesNull() {
                this[this.tableCATEGORY.notesColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public APPOINTMENT_CATEGORYRow[] GetAPPOINTMENT_CATEGORYRows() {
                if ((this.Table.ChildRelations["FK_CATEGORY_APPOINTMENT_CATEGORY"] == null)) {
                    return new APPOINTMENT_CATEGORYRow[0];
                }
                else {
                    return ((APPOINTMENT_CATEGORYRow[])(base.GetChildRows(this.Table.ChildRelations["FK_CATEGORY_APPOINTMENT_CATEGORY"])));
                }
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class PROVIDERRow : global::System.Data.DataRow {
            
            private PROVIDERDataTable tablePROVIDER;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal PROVIDERRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tablePROVIDER = ((PROVIDERDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string account_guid {
                get {
                    try {
                        return ((string)(this[this.tablePROVIDER.account_guidColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'account_guid\' in table \'PROVIDER\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePROVIDER.account_guidColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string provider_guid {
                get {
                    return ((string)(this[this.tablePROVIDER.provider_guidColumn]));
                }
                set {
                    this[this.tablePROVIDER.provider_guidColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string name {
                get {
                    return ((string)(this[this.tablePROVIDER.nameColumn]));
                }
                set {
                    this[this.tablePROVIDER.nameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int color {
                get {
                    return ((int)(this[this.tablePROVIDER.colorColumn]));
                }
                set {
                    this[this.tablePROVIDER.colorColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string notes {
                get {
                    try {
                        return ((string)(this[this.tablePROVIDER.notesColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'notes\' in table \'PROVIDER\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePROVIDER.notesColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isaccount_guidNull() {
                return this.IsNull(this.tablePROVIDER.account_guidColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setaccount_guidNull() {
                this[this.tablePROVIDER.account_guidColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsnotesNull() {
                return this.IsNull(this.tablePROVIDER.notesColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetnotesNull() {
                this[this.tablePROVIDER.notesColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public APPOINTMENT_PROVIDERRow[] GetAPPOINTMENT_PROVIDERRows() {
                if ((this.Table.ChildRelations["FK_PROVIDER_APPOINTMENT_PROVIDER"] == null)) {
                    return new APPOINTMENT_PROVIDERRow[0];
                }
                else {
                    return ((APPOINTMENT_PROVIDERRow[])(base.GetChildRows(this.Table.ChildRelations["FK_PROVIDER_APPOINTMENT_PROVIDER"])));
                }
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class RECURRENCERow : global::System.Data.DataRow {
            
            private RECURRENCEDataTable tableRECURRENCE;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal RECURRENCERow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableRECURRENCE = ((RECURRENCEDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string account_guid {
                get {
                    try {
                        return ((string)(this[this.tableRECURRENCE.account_guidColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'account_guid\' in table \'RECURRENCE\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableRECURRENCE.account_guidColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string recurrence_guid {
                get {
                    return ((string)(this[this.tableRECURRENCE.recurrence_guidColumn]));
                }
                set {
                    this[this.tableRECURRENCE.recurrence_guidColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int recurrence_interval {
                get {
                    return ((int)(this[this.tableRECURRENCE.recurrence_intervalColumn]));
                }
                set {
                    this[this.tableRECURRENCE.recurrence_intervalColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime start_date {
                get {
                    return ((global::System.DateTime)(this[this.tableRECURRENCE.start_dateColumn]));
                }
                set {
                    this[this.tableRECURRENCE.start_dateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int end_type {
                get {
                    return ((int)(this[this.tableRECURRENCE.end_typeColumn]));
                }
                set {
                    this[this.tableRECURRENCE.end_typeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int end_iterations {
                get {
                    return ((int)(this[this.tableRECURRENCE.end_iterationsColumn]));
                }
                set {
                    this[this.tableRECURRENCE.end_iterationsColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime end_date {
                get {
                    return ((global::System.DateTime)(this[this.tableRECURRENCE.end_dateColumn]));
                }
                set {
                    this[this.tableRECURRENCE.end_dateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime last_create_date {
                get {
                    return ((global::System.DateTime)(this[this.tableRECURRENCE.last_create_dateColumn]));
                }
                set {
                    this[this.tableRECURRENCE.last_create_dateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string last_create_groupId {
                get {
                    return ((string)(this[this.tableRECURRENCE.last_create_groupIdColumn]));
                }
                set {
                    this[this.tableRECURRENCE.last_create_groupIdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool check_only {
                get {
                    return ((bool)(this[this.tableRECURRENCE.check_onlyColumn]));
                }
                set {
                    this[this.tableRECURRENCE.check_onlyColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int day_recurrence_mode {
                get {
                    return ((int)(this[this.tableRECURRENCE.day_recurrence_modeColumn]));
                }
                set {
                    this[this.tableRECURRENCE.day_recurrence_modeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int day_day_interval {
                get {
                    return ((int)(this[this.tableRECURRENCE.day_day_intervalColumn]));
                }
                set {
                    this[this.tableRECURRENCE.day_day_intervalColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int month_recurrence_mode {
                get {
                    return ((int)(this[this.tableRECURRENCE.month_recurrence_modeColumn]));
                }
                set {
                    this[this.tableRECURRENCE.month_recurrence_modeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int month_month_interval {
                get {
                    return ((int)(this[this.tableRECURRENCE.month_month_intervalColumn]));
                }
                set {
                    this[this.tableRECURRENCE.month_month_intervalColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int month_day_interval {
                get {
                    return ((int)(this[this.tableRECURRENCE.month_day_intervalColumn]));
                }
                set {
                    this[this.tableRECURRENCE.month_day_intervalColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int month_day_ordinal {
                get {
                    return ((int)(this[this.tableRECURRENCE.month_day_ordinalColumn]));
                }
                set {
                    this[this.tableRECURRENCE.month_day_ordinalColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int month_day_position {
                get {
                    return ((int)(this[this.tableRECURRENCE.month_day_positionColumn]));
                }
                set {
                    this[this.tableRECURRENCE.month_day_positionColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int week_week_interval {
                get {
                    return ((int)(this[this.tableRECURRENCE.week_week_intervalColumn]));
                }
                set {
                    this[this.tableRECURRENCE.week_week_intervalColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool week_use_sun {
                get {
                    return ((bool)(this[this.tableRECURRENCE.week_use_sunColumn]));
                }
                set {
                    this[this.tableRECURRENCE.week_use_sunColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool week_use_mon {
                get {
                    return ((bool)(this[this.tableRECURRENCE.week_use_monColumn]));
                }
                set {
                    this[this.tableRECURRENCE.week_use_monColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool week_use_tue {
                get {
                    return ((bool)(this[this.tableRECURRENCE.week_use_tueColumn]));
                }
                set {
                    this[this.tableRECURRENCE.week_use_tueColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool week_use_wed {
                get {
                    return ((bool)(this[this.tableRECURRENCE.week_use_wedColumn]));
                }
                set {
                    this[this.tableRECURRENCE.week_use_wedColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool week_use_thu {
                get {
                    return ((bool)(this[this.tableRECURRENCE.week_use_thuColumn]));
                }
                set {
                    this[this.tableRECURRENCE.week_use_thuColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool week_use_fri {
                get {
                    return ((bool)(this[this.tableRECURRENCE.week_use_friColumn]));
                }
                set {
                    this[this.tableRECURRENCE.week_use_friColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool week_use_sat {
                get {
                    return ((bool)(this[this.tableRECURRENCE.week_use_satColumn]));
                }
                set {
                    this[this.tableRECURRENCE.week_use_satColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int year_day_interval {
                get {
                    return ((int)(this[this.tableRECURRENCE.year_day_intervalColumn]));
                }
                set {
                    this[this.tableRECURRENCE.year_day_intervalColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int year_day_ordinal {
                get {
                    return ((int)(this[this.tableRECURRENCE.year_day_ordinalColumn]));
                }
                set {
                    this[this.tableRECURRENCE.year_day_ordinalColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int year_day_position {
                get {
                    return ((int)(this[this.tableRECURRENCE.year_day_positionColumn]));
                }
                set {
                    this[this.tableRECURRENCE.year_day_positionColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int year_month_interval {
                get {
                    return ((int)(this[this.tableRECURRENCE.year_month_intervalColumn]));
                }
                set {
                    this[this.tableRECURRENCE.year_month_intervalColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int year_month_ordinal {
                get {
                    return ((int)(this[this.tableRECURRENCE.year_month_ordinalColumn]));
                }
                set {
                    this[this.tableRECURRENCE.year_month_ordinalColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int year_recurrence_mode {
                get {
                    return ((int)(this[this.tableRECURRENCE.year_recurrence_modeColumn]));
                }
                set {
                    this[this.tableRECURRENCE.year_recurrence_modeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isaccount_guidNull() {
                return this.IsNull(this.tableRECURRENCE.account_guidColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setaccount_guidNull() {
                this[this.tableRECURRENCE.account_guidColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class RESOURCERow : global::System.Data.DataRow {
            
            private RESOURCEDataTable tableRESOURCE;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal RESOURCERow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableRESOURCE = ((RESOURCEDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string account_guid {
                get {
                    try {
                        return ((string)(this[this.tableRESOURCE.account_guidColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'account_guid\' in table \'RESOURCE\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableRESOURCE.account_guidColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string resource_guid {
                get {
                    return ((string)(this[this.tableRESOURCE.resource_guidColumn]));
                }
                set {
                    this[this.tableRESOURCE.resource_guidColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string name {
                get {
                    return ((string)(this[this.tableRESOURCE.nameColumn]));
                }
                set {
                    this[this.tableRESOURCE.nameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int color {
                get {
                    return ((int)(this[this.tableRESOURCE.colorColumn]));
                }
                set {
                    this[this.tableRESOURCE.colorColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string notes {
                get {
                    try {
                        return ((string)(this[this.tableRESOURCE.notesColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'notes\' in table \'RESOURCE\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableRESOURCE.notesColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isaccount_guidNull() {
                return this.IsNull(this.tableRESOURCE.account_guidColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setaccount_guidNull() {
                this[this.tableRESOURCE.account_guidColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsnotesNull() {
                return this.IsNull(this.tableRESOURCE.notesColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetnotesNull() {
                this[this.tableRESOURCE.notesColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public APPOINTMENT_RESOURCERow[] GetAPPOINTMENT_RESOURCERows() {
                if ((this.Table.ChildRelations["RESOURCEAPPOINTMENT_RESOURCE"] == null)) {
                    return new APPOINTMENT_RESOURCERow[0];
                }
                else {
                    return ((APPOINTMENT_RESOURCERow[])(base.GetChildRows(this.Table.ChildRelations["RESOURCEAPPOINTMENT_RESOURCE"])));
                }
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class APPOINTMENT_RESOURCERow : global::System.Data.DataRow {
            
            private APPOINTMENT_RESOURCEDataTable tableAPPOINTMENT_RESOURCE;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal APPOINTMENT_RESOURCERow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableAPPOINTMENT_RESOURCE = ((APPOINTMENT_RESOURCEDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string appointment_guid {
                get {
                    return ((string)(this[this.tableAPPOINTMENT_RESOURCE.appointment_guidColumn]));
                }
                set {
                    this[this.tableAPPOINTMENT_RESOURCE.appointment_guidColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string resource_guid {
                get {
                    return ((string)(this[this.tableAPPOINTMENT_RESOURCE.resource_guidColumn]));
                }
                set {
                    this[this.tableAPPOINTMENT_RESOURCE.resource_guidColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public RESOURCERow RESOURCERow {
                get {
                    return ((RESOURCERow)(this.GetParentRow(this.Table.ParentRelations["RESOURCEAPPOINTMENT_RESOURCE"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["RESOURCEAPPOINTMENT_RESOURCE"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public APPOINTMENTRow APPOINTMENTRow {
                get {
                    return ((APPOINTMENTRow)(this.GetParentRow(this.Table.ParentRelations["APPOINTMENTAPPOINTMENT_RESOURCE"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["APPOINTMENTAPPOINTMENT_RESOURCE"]);
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class ROOMRowChangeEvent : global::System.EventArgs {
            
            private ROOMRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ROOMRowChangeEvent(ROOMRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ROOMRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class APPOINTMENTRowChangeEvent : global::System.EventArgs {
            
            private APPOINTMENTRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public APPOINTMENTRowChangeEvent(APPOINTMENTRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public APPOINTMENTRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class APPOINTMENT_CATEGORYRowChangeEvent : global::System.EventArgs {
            
            private APPOINTMENT_CATEGORYRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public APPOINTMENT_CATEGORYRowChangeEvent(APPOINTMENT_CATEGORYRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public APPOINTMENT_CATEGORYRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class APPOINTMENT_PROVIDERRowChangeEvent : global::System.EventArgs {
            
            private APPOINTMENT_PROVIDERRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public APPOINTMENT_PROVIDERRowChangeEvent(APPOINTMENT_PROVIDERRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public APPOINTMENT_PROVIDERRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class CATEGORYRowChangeEvent : global::System.EventArgs {
            
            private CATEGORYRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public CATEGORYRowChangeEvent(CATEGORYRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public CATEGORYRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class PROVIDERRowChangeEvent : global::System.EventArgs {
            
            private PROVIDERRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public PROVIDERRowChangeEvent(PROVIDERRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public PROVIDERRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class RECURRENCERowChangeEvent : global::System.EventArgs {
            
            private RECURRENCERow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public RECURRENCERowChangeEvent(RECURRENCERow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public RECURRENCERow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class RESOURCERowChangeEvent : global::System.EventArgs {
            
            private RESOURCERow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public RESOURCERowChangeEvent(RESOURCERow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public RESOURCERow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class APPOINTMENT_RESOURCERowChangeEvent : global::System.EventArgs {
            
            private APPOINTMENT_RESOURCERow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public APPOINTMENT_RESOURCERowChangeEvent(APPOINTMENT_RESOURCERow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public APPOINTMENT_RESOURCERow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
    }
}

#pragma warning restore 1591